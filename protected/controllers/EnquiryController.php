<?php/*** User: Kvan* Date: 4/3/14* Time: 3:36 PM* To change this template use File | Settings | File Templates.*/class EnquiryController extends Controller {        public function actionSendGlobal() {        $model = new ProGlobalEnquiry('create');		        if (isset($_POST['ProGlobalEnquiry'])) {            $model->attributes = $_POST['ProGlobalEnquiry'];            if ($model->type_enquiry == 'Buy')                $model->scenario = 'remove';            if ($model->type_enquiry == 'Rent' && $model->rent_type == 'Tenant')                $model->scenario = 'remove';			            if ($model->validate()) {                $model->choosetype         = isset($_POST['choosetype']) ? $_POST['choosetype'] : 0;                $model->property_type_code = isset($_POST['property_type_code']) ? is_array($_POST['property_type_code']) ? implode(',', $_POST['property_type_code']) : "" : '';                $model->location_list_id   = isset($_POST['location_list_id']) ? is_array($_POST['location_list_id']) ? implode(',', $_POST['location_list_id']) : "" : '';				                if (!empty($model->min_price) && !empty($model->max_price))                    $model->price = $model->min_price . " - " . $model->max_price;                elseif (!empty($model->min_price))                    $model->price = "Over " . $model->min_price;                elseif (!empty($model->max_price))                    $model->price = "Lower than " . $model->max_price;                if (!empty($model->min_bedroom) && !empty($model->max_bedroom))                    $model->bedrooms = $model->min_bedroom . " - " . $model->max_bedroom;                elseif (!empty($model->min_bedroom))                    $model->bedrooms = "Over " . $model->min_bedroom;                elseif (!empty($model->max_bedroom))                    $model->bedrooms = "Lower than " . $model->max_bedroom;                if (!empty($model->min_bathroom) && !empty($model->max_bathroom))                    $model->bathrooms = $model->min_bathroom . " - " . $model->max_bathroom;                elseif (!empty($model->min_bathroom))                    $model->bathrooms = "Over " . $model->min_bathroom;                elseif (!empty($model->max_bathroom))                    $model->bathrooms = "Lower than " . $model->max_bathroom;                if (!empty($model->min_floor_size) && !empty($model->max_floor_size))                    $model->floor_size = $model->min_floor_size . " - " . $model->max_floor_size;                elseif (!empty($model->min_floor_size))                    $model->floor_size = "Over " . $model->min_floor_size;                elseif (!empty($model->max_floor_size))                    $model->floor_size = "Lower than " . $model->max_floor_size;                if (!empty($model->min_unit) && !empty($model->max_unit))                    $model->unit = $model->min_unit . " - " . $model->max_unit;                elseif (!empty($model->min_unit))                    $model->unit = "Over " . $model->min_unit;                elseif (!empty($model->max_unit))                    $model->unit = "Lower than " . $model->max_unit;                //                if(!empty($model->furnishing_include) && $model->type_enquiry =='Buy' ){                if (!empty($model->furnishing_include)) {                    $model->furnishing_include = json_encode($model->furnishing_include);                }                if (!empty($model->special_features) && $model->type_enquiry == 'Sell') {                    $model->special_features = json_encode($model->special_features);                }                if (!empty($model->tenancy_expiry_datepicker)) {                    $model->tenancy_expiry_datepicker = date('Y-m-d', strtotime($model->tenancy_expiry_datepicker));                } else                    $model->tenancy_expiry_datepicker = NULL;								$model->created_date = date('Y-m-d H:i:s');				                if ($model->save()) {                    // Jun 07, 2014 ANH DUNG update file id                    ProEnquiryGlobalFile::UpdateEnquiryGlobalId($model->id, $model->file_id);                    //insert Subscriber                    if (!empty($_POST['ProGlobalEnquiry']['get_update']))                        Subscriber::saveSubscriberPublic($model->email, 2, $model->name);                   					//email to Admin                    SendEmail::sendMailEnquiryGlobalToAdmin($model);                    					//email to sub Admin                    // SendEmail::sendMailEnquiryGlobalToSubAdmin($model);					                    //email to sender - Jan 23, 2015 ANH DUNG					if (trim($model->email)) {						SendEmail::sendMailEnquiryGlobalToSender($model);					}										$thankYouEnquiry = Pages::getPageById(PAGE_THANK_ENQUIRY_GLOBAL);                    Yii::app()->user->setFlash('success', $thankYouEnquiry->content);                    $this->redirect(Yii::app()->createAbsoluteUrl('page/index', array(                        'slug' => $thankYouEnquiry->slug                    )));                } else {                    $this->redirect(Yii::app()->createAbsoluteUrl('/'));                }            } else {                $this->redirect(Yii::app()->createAbsoluteUrl('/'));            }        } else {            $this->redirect(Yii::app()->createAbsoluteUrl('/'));        }    }    public function actionAddPropertyItem(){        if(isset($_GET['id'])){            $model = new ProEnquiryProperty();            if(isset($_POST['ProEnquiryProperty'])){                $model->attributes = $_POST['ProEnquiryProperty'];                if ($model->validate()) {                    $model->property_id = $_GET['id'];                    if($model->save()){                        $thankYouEnquiry = Pages::getPageById(PAGE_THANK_ENQUIRY_PROPERTY);                        Yii::app ()->user->setFlash ( 'success', $thankYouEnquiry->content );                        //insert Subscriber                        if(!empty($_POST['ProEnquiryProperty']['get_update']))                            Subscriber::saveSubscriberPublic($model->email,2,$model->name);                            /*                             * -----------------                             * dtoan : send mail                             * -----------------                             */                             SendEmail::sendEmailEnquiryForAgent($model);                             SendEmail::sendEmailEnquiryForSender($model);                             Yii::app()->session['propertyId'] = $model->property_id;                             $this->redirect(Yii::app()->createAbsoluteUrl('page/index',array('slug'=> $thankYouEnquiry->slug )));//                        $this->redirect(Yii::app()->createAbsoluteUrl('site/thankyou'));                    }                }else{                    $this->redirect(Yii::app()->createAbsoluteUrl('/'));                }            }        }else            throw new CHttpException(404,'Invalid request. Please do not repeat this request again.');    }    /**     * @Author: ANH DUNG Jul 15, 2014     * @Todo: save file upload ajax     * @Param: $model model  ProGlobalEnquiry     */        public function actionAjaxFileGlobal(){        try        {            $response = array();            $response['code'] = false;            $response['message'] = 'Invalid Request.';            if(!Yii::app()->request->isPostRequest){                throw new Exception('An error has occured.');            }            $model = new ProGlobalEnquiry('file_upload');                        if(isset($_POST['ProGlobalEnquiry']))            {                $model->attributes=$_POST['ProGlobalEnquiry'];                $model->file_name = CUploadedFile::getInstance($model, 'file_name');                $model->validate();                if(!$model->hasErrors()){                    $idModelFile = $this->saveFile($model);                    if($idModelFile){                        $response['code'] = true;                        $response['message'] = $idModelFile;//                        $response['file_name'] = $model->file_name_slug;                        $response['file_name'] = $model->file_name;                    }                }else{                    $response['code'] = false;                    $response['message'] = $model->getError('file_name');                }            }                    }        catch(Exception $e)        {            $response['message'] = 'An error has occured.';            $response['code'] = false;        }        echo json_encode($response);        die;            }        /**     * @Author: ANH DUNG Jul 15, 2014     * @Todo: save file upload ajax     * @Param: $model model  ProGlobalEnquiry     */    public function saveFile($model){        $model->date_only = date('Y-m-d');        ProEnquiryGlobalFile::saveFile($model, 'file_name');        $mFile = new ProEnquiryGlobalFile();        $mFile->date_only = $model->date_only;        $mFile->file_name = $model->file_name;        $mFile->file_name_slug = $model->file_name_slug;        $mFile->save();        return $mFile->id;    }            /**     * @Author: ANH DUNG Jul 25, 2014     * @Todo: save file upload ajax     */        public function actionAjaxUploadFileAll(){        try        {            //            MyFormat::CheckRequiredLogin();            $response = array();            $response['code'] = false;            $response['message'] = 'Invalid Request.';            if(!Yii::app()->request->isPostRequest){                                throw new Exception('An error has occured.');            }            $ClassName = isset($_POST['ClassName'])?$_POST['ClassName']:''; // name model            $Scenario = isset($_POST['Scenario'])?$_POST['Scenario']:''; // scenario to validate            $ColumnNameFile = isset($_POST['ColumnNameFile'])?$_POST['ColumnNameFile']:''; // name columnt            if(empty($ClassName) || empty($Scenario) || empty($ColumnNameFile)){                throw new Exception('An error has occured. ClassName not valid');            }                        $model = new $ClassName($Scenario);            if(isset($_POST[$ClassName]))            {                                $model->attributes=$_POST[$ClassName];                $model->$ColumnNameFile = CUploadedFile::getInstance($model, $ColumnNameFile);                $model->validate();                if(!$model->hasErrors()){                    $idModelFile=0;                    if($ClassName == 'ProInventoryPhoto'){                        $transaction_id = isset($_POST['transaction_id'])?$_POST['transaction_id']:'';                        $idModelFile = ProInventoryPhoto::SaveModel($model, $transaction_id, $ColumnNameFile);                    }                    if($idModelFile){                        $response['code'] = true;                        $response['message'] = $idModelFile;                        $response['file_name'] = $model->file_name;                        $response['li'] = $this->builLiPhoto($model);                    }                }else{                    $response['code'] = false;                    $response['message'] = $model->getError($ColumnNameFile);                }            }                    }        catch(Exception $e)        {//            $response['message'] = 'An error has occured.';            $response['message'] = $e->getMessage();            $response['code'] = false;        }        echo json_encode($response);        die;            }                       /**     * @Author: ANH DUNG Jul 25, 2014     * @Todo: remove inventory photo     * @Param: $id      */    public function actionAjaxRemoveFileAll($id){        MyFormat::CheckRequiredLogin();        $model = ProInventoryPhoto::model()->findByPk($id);        if($model){            if($model->user_id==Yii::app()->user->id){                $model->delete();            }        }    }        /**     * @Author: ANH DUNG Jul 25, 2014     * @Todo: build li photo for inventory photo     * @Param: $model model      * @Return: string li     */    public function builLiPhoto($model){        $file_path = ImageProcessing::bindImageByModel($model, 160, 160);        $pathPhotoBig = ImageProcessing::bindImageByModel($model, -1, -1);        $link_remove = Yii::app()->createAbsoluteUrl('enquiry/ajaxRemoveFileAll', array('id'=>$model->id));        if(isset($_GET['admin']))            $link_remove = Yii::app()->createAbsoluteUrl('admin/tenancy/inventoryPhoto', array('id'=>$model->transaction_id, 'InventoryPhotoId'=>$model->id));        $res = "";        $res .="<li>";                $res .="<a href='$pathPhotoBig' class='FancyPhoto' rel='group'>";                $res .="<img src='$file_path'>";                $res .="</a>";                $res .="<a href='javascript:void(0);' next='$link_remove' class='ico-delete remove_file_js'>"                        . "<img src='".Yii::app()->theme->baseUrl."/img/ico-delete.png' alt='delete'></a>";        $res .="</li>";        return $res;    }    //HTram August 20, 2015 : to get location to fill in content of Term & Conddition    public function actionGetLocation(){        $error = array();            $array_id = array();            $string = "";            if(isset($_POST['location_list_id'])){                $array_id = $_POST['location_list_id'];                if($array_id){                    foreach ($array_id as $item){                        $location = ProLocation::model()->findByPk($item);                        if($location){                            $string .= ProLocation::getNameWithDistrict($item);                            $string .= "<br>";                        }                    }                    $json = CJavaScript::jsonEncode(array('success' => true,'text'=>$string));                }            }else {                $json = CJavaScript::jsonEncode(array('success' => true,'text'=>$string));            }            echo $json;    }    }
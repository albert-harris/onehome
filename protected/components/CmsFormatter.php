<?php/** * The extend of CFormatter, using in type of CGridView columns and attributes of CDetailView */class CmsFormatter extends CFormatter {    protected $publishFormat = array('1' => 'Published', '0' => 'Unpublished');    protected $statusFormat = array('1' => 'Active', '0' => 'Inactive');    protected $approveFormat = array('1' => 'Approved', '0' => 'Unapproved');    public static $statusVar = array('1' => 'Active', '0' => 'Inactive');    public static $yesNoFormat = array('1' => 'Yes', '0' => 'No');    public static $allModule = array(null => 'Front End',        'admin' => 'Admin',        'member' => 'Member',        'product' => 'Product',        'auditTrail' => 'Audit Trail');    public $statusOrder = array(0 => 'Pending', 1 => 'Completed', 2 => 'Canceled');    public static $statusPaymentVoucher  = array(0 => 'Unpaid', 1 => 'Paid');    const COMPLETE_REPORT = 2;    const PROGESS_REPORT = 1;        public static $statusReport = array(0 => 'New', 1 => 'In Progress', CmsFormatter::COMPLETE_REPORT => 'Completed');    public static $arrLocation = array('empty'=>'Select', 1 => '1 Bedroom', 2 => '2 Bedrooms', 3 => '3 Bedrooms', 4=>'4 Bedrooms');        //1: Listing nao co hinh thi show ra    //2: Listing nào có số tầng > 1    public static $arrOptions = array(1 => 'With photos only', 2 => 'With Floor plan');    public static $arrListOn = array(        'empty'=>'-',         1 => 'Within 3 days',         2 => 'Within 1 week',         3 => 'Within 2 weeks',         4 => 'Within 1 month'    );    	public static function getListingNameDetail($model){            		$huyen = $model->rPropertyType?$model->rPropertyType->name:"";		$name  = MyFunctionCustom::showTitlePropertyOrBuilding($model->property_name_or_address);		$type  = $model->listing_type == 1? "For Rent":"For Sale";		$location = $model->location_id;		if($location < 10)			$location = 'D0'.$location;		else			$location = 'D'.$location;			//		return $huyen." ".$type." - ".$name." (".$location.")";        /*        * DTOAN         * DUNG DE HIEN THI TITLE KHI NGUOI DUNG TU DIEN VAO        */        if($model->display_title !=''){            $name = $model->display_title;        }		return $type." - ".$name." (".$location.")";	}    public static $statusOrder_str = array(0 => 'New', 1 => 'Completed', 2 => 'Canceled');    public static $TITLE_MR = array('Mr' => 'Mr.', 'Mrs' => 'Mrs.', 'Ms' => 'Ms.', 'Madam' => 'Madam', 'Dr' => 'Dr.');    const STATUS_ACTIVE = 1;    const STATUS_INACTIVE = 0;        public static $dateTranFormat = 'd M Y';         public function getStatusFormat($hasEmpty = true) {        if ($hasEmpty)            return array('' => '', '1' => 'Active', '0' => 'Inactive');        return $this->statusFormat;    }    public function getApproveFormat($hasEmpty = true) {        if ($hasEmpty)            return array('' => '', '1' => 'Approved', '0' => 'Unapproved');        return $this->approveFormat;    }    /**     * @param $value     * @return string     * <Jason>     */    public function formatengageus($value){        $res = '';        $currentDate = date('Y-m-d');//        $currentDate=date('Y-m-d', strtotime($currentDate));        $expiredDate=date('Y-m-d', strtotime($value['expired_date']));        $RequestBank = '<a data-fancybox-type="iframe" href="'.Yii::app()->createAbsoluteUrl('member/landlord/requestBankEvaluation', array('transaction_id'=>$value['trans_id'])).'" class="btn-5 RequestBankEvaluation  w-160" title="Request Bank Evaluation">Request Bank Evaluation</a>';        if($expiredDate > $currentDate){                                $res .= '<a data-fancybox-type="iframe" href="'.Yii::app()->createAbsoluteUrl('member/landlord/engageus', array('transaction_id'=>$value['trans_id'], 'listing_id' => $value['listing_id'])).'" class="btn-5 engageus w-160" title="To Sale">To Sale</a>';        }        $res .= $RequestBank;        return $res;    }        public function formatFileResume($value){        $res = '';        if(!empty($value['file_resume'])){            $link = Yii::app()->createAbsoluteUrl(ProResume::$folderUpload."/".$value['id']."/".$value['file_resume']);            $res="<a href='$link' class='show-image' target='_blank'>".$value['file_resume']."</a>";        }        return $res;    }    /**     * @param $value     * @return string     * <Jason>     *     */    public function formatpropertyname($value){        if(!is_array($value))            return "";        $trans = ProTransactions::model()->findByPk($value['transaction_id']);        if($trans){            $cmsFormater = new CmsFormatter();            $value['name'] = $cmsFormater->formatTransactionPropertyName($trans); // DEc 02, 2014//            $role = $trans->user->role_id;            $role = Yii::app()->user->role_id;            if($role == ROLE_LANDLORD){                return '<a href="'.Yii::app()->createAbsoluteUrl('member/landlord/tenancies_detail', array('transaction_id'=>$value['transaction_id'])).'" >'.$value['name'].'</a>';            }            elseif($role == ROLE_TENANT){                if(isset($value['orther']) && $value['orther'] !='' ){                    $value['name'] = $value['name'] .' - ' . $value['orther'];                }                                return '<a href="'.Yii::app()->createAbsoluteUrl('member/tenant/tenancies_detail', array('transaction_id'=>$value['transaction_id'])).'" >'.$value['name'].'</a>';            }            elseif($role == ROLE_AGENT){                return '<a href="'.Yii::app()->createAbsoluteUrl('member/agent/tenancies_detail', array('transaction_id'=>$value['transaction_id'])).'" >'.$value['name'].'</a>';            }        }        if(isset($value['orther']) && $value['orther'] !='' ){            $value['name'] = $value['name'] .' - ' . $value['orther'];        }        if(isset($value['title_full']) && $value['title_full'] !='' ){            $modelListing   = $value['title_full'];            $title[] = $value['name'];            $value['name'] = MyFormat::AdFixNameListing($trans, $title);            //            if($modelListing->listing){//                if($modelListing->listing->building_name !=''){//                    $title []= $modelListing->listing->building_name;//                }//                if($modelListing->listing->house_blk_no !=''){//                    $title []= $modelListing->listing->house_blk_no;//                }//                if($modelListing->listing->property_street_name !=''){//                    $title []= $modelListing->listing->property_street_name;//                }  //                if($modelListing->listing->postal_code !=''){//                    $title []= $modelListing->listing->postal_code;//                }//            }else{//                // Nguyên phần else: ANH DUNG MAY 06, 2015//                CmsFormatter::UpdateStringPropertyName($trans, $title);                //            }//            //            if(count($title)>0){ // maybe not need count//               $value['name'] = implode(' - ',$title); //            }                    }        return $value['name'];    }            /**     * @Author: ANH DUNG May 06, 2015     * @Todo: something     * @Param: $mTrans model transaction     * @Param: $title string need update     */    public static function UpdateStringPropertyName($mTrans, &$title) {        $mTransPropertyDetail = $mTrans->rPropertyDetail;        if( trim($mTransPropertyDetail->building_name) != ''){            $title []= $mTransPropertyDetail->building_name;        }        if( trim($mTransPropertyDetail->house_blk_no) != ''){            $title []= $mTransPropertyDetail->house_blk_no;        }        if( trim($mTransPropertyDetail->street_name) != ''){            $title []= $mTransPropertyDetail->street_name;        }        if( trim($mTransPropertyDetail->postal_code) != ''){            $title []= $mTransPropertyDetail->postal_code;        }        // Nguyên phần else: ANH DUNG MAY 06, 2015    }        /**     * <Jason>     * <To show property detail>     * @param type $value     * @return type     */    public function formatpropertydetail($value){        $trans = ProTransactions::model()->findByPk($value['transaction_id']);        if($trans){            $cmsFormater = new CmsFormatter();            $value['name'] = $cmsFormater->formatTransactionPropertyName($trans); // DEc 02, 2014            $role = Yii::app()->user->role_id;            if($role == ROLE_LANDLORD){                return '<a href="'.Yii::app()->createAbsoluteUrl('member/landlord/tenancies_detail', array('transaction_id'=>$value['transaction_id'])).'" >'.$value['name'].'</a>';            }            elseif($role == ROLE_TENANT){                return '<a href="'.Yii::app()->createAbsoluteUrl('member/tenant/tenancies_detail', array('transaction_id'=>$value['transaction_id'])).'" >'.$value['name'].'</a>';            }            elseif($role == ROLE_AGENT){                return $value['name'];            }                    }        return $value['name'];    }    public function getPositionFormat($hasEmpty = true) {        if ($hasEmpty)            return array('' => '', 'Bottom' => 'Bottom');        return $this->positionFormat;    }    /* formatYNStatus use for Yes/No */    public static function formatYNStatus($value) {        $return = array('1' => 'Yes', '0' => 'No');        return isset($return[$value]) ? $return[$value] : "";    }    /**     * @param $value     * @return string     * <Jason>     */    public static function formatStatusReport($value) {        return CmsFormatter::$statusReport[$value];    }    public function formatStatus($value) {        if (is_array($value)) {            return (($value['status'] == self::STATUS_INACTIVE) ?                            CHtml::link(                                    "Inactive", array("ajaxActivate", "id" => $value['id']), array(                                "class" => "ajaxupdate",                                "title" => "Click here to " . $this->publishFormat[1],                                    )                            ) :                            CHtml::link(                                    "Active", array("ajaxDeactivate", "id" => $value['id']), array(                                "class" => "ajaxupdate",                                "title" => "Click here to " . $this->publishFormat[0],                                    )                            )                    );        }        else            return $value == 0 ? $this->statusFormat['0'] : $this->statusFormat['1'];    }    public function formatRefundStatus($value) {        if (is_array($value)) {            return (($value['status'] == self::STATUS_INACTIVE) ?                            CHtml::link(                                    "New", array("update", "id" => $value['id']), array(                                "class" => "normalupdate",                                "title" => "Click here to verified",                                    )                            ) : 'Verified'//                    CHtml::link(//                        "Verified", array("ajaxDeactivate", "id" => $value['id']), array(//                        "class" => "ajaxupdate",//                        "title" => "Click here to " . $this->publishFormat[0],//                            )//                    )                    );        }        else            return $value == 0 ? 'New' : 'Verified';    }    public function formatPaymentStatus($value) {        if (is_array($value)) {            return (($value['status'] == 0) ?                            CHtml::link(                                    "Pending", array("ajaxPaid", "id" => $value['id']), array(                                "class" => "ajaxupdate",                                "title" => "Click here to set as paid",                                    )                            ) :                            ($value['allowOneTime'] == 0 ?                                    CHtml::link(                                            "Paid", array("ajaxPending", "id" => $value['id']), array(                                        "class" => "ajaxupdate",                                        "title" => "Click here to set as pending",                                            )                                    ) :                                    "Paid"                            )                    );        }        else            return $value == 0 ? $this->statusFormat['0'] : $this->statusFormat['1'];    }    public function formatSetFeatured($value) {        if (!is_array($value))            return '';        if (!$value['is_featured'])            return '';        return CHtml::link(                        "Set Featured", array("ajaxSetFeatured", "id" => $value['id']), array(                    "class" => "ajaxupdate ajaxSetFeatured",                    "title" => "Click here to set featured for this model",                        )        );    }    public function formatStatusOrder($value) {        if ($value == 0)            return $this->statusOrder[0];        if ($value == 1)            return $this->statusOrder[1];        if ($value == 2)            return $this->statusOrder[2];    }        public function formatShowMenu($value) {        if (is_array($value)) {            return ($value['show_menu'] == self::STATUS_INACTIVE) ?                    CHtml::link(                            "No", array("ajaxShow", "id" => $value['id']), array(                        "class" => "ajaxupdate",                        "title" => "Click here to turn on in menu",                            )                    ) :                    CHtml::link(                            "Yes", array("ajaxNotShow", "id" => $value['id']), array(                        "class" => "ajaxupdate",                        "title" => "Click here to turn off in menu",                            )            );        }        else            return $value == 0 ? $this->statusFormat['0'] : $this->statusFormat['1'];    }    public function formatPage($value) {        $value = EmbedController::parse($value);        return $this->formatHtml($value);    }    public function formatDate($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value))            return '';        if (is_string($value)) {            $date = new DateTime($value);            return $date->format(Yii::app()->params['dateFormat']);        }        return parent::formatDate($value);    }        public function formatDatePickerInput($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value))            return '';        if (is_string($value)) {            $date = new DateTime($value);            return $date->format('d/m/Y');        }        return parent::formatDate($value);    }    public function formatTime($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value))            return '';        if (is_string($value)) {            $date = new DateTime($value);            return $date->format(Yii::app()->params['timeFormat']);        }        return parent::formatDate($value);    }    public function formatDateTime($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value))            return '';        if (is_string($value)) {            $date = new DateTime($value);            return $date->format(Yii::app()->params['dateFormat'] . ' ' . Yii::app()->params['timeFormat']);        }        return parent::formatDate($value);    }        public function formatDateTimeTran($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value))            return '';        if (is_string($value)) {            $date = new DateTime($value);            return $date->format(CmsFormatter::$dateTranFormat . ' ' . Yii::app()->params['timeFormat']);        }        return parent::formatDate($value);    }    public function formatFileSize($value) {        static $KB = 1024;        static $MB = 1048576;        $size = intval($value);        if ($size < $KB) {            return $value . ' B';        } elseif ($size < $MB) {            return round($value / $KB, 3) . ' KB';        } else {            return round($value / $MB, 3) . ' MB';        }    }    public function formatImage($value) {        if (is_array($value)) {            $url = Yii::app()->createUrl($value['url']);            $h = $value['h'];            $w = $value['w'];            return CHtml::image(Yii::app()->createAbsoluteUrl(                                    "vendors/timthumb.php?src=$url&h=$h&w=$w&zc=1"                            ), '', isset($value['htmlOptions']) ? $value['htmlOptions'] : array());        }//        return CHtml::image(Yii::app()->createAbsoluteUrl($value));        return $value;    }       public function formatPrice($value) {        // will fix later - ANH DUNG        return MyFormat::formatPrice($value);    }        public function formatPriceSign($value) {        // will fix later - ANH DUNG        return MyFormat::formatPriceSign($value);    }    // MAR 11, 2014 - ANH DUNG    public function formatNumberWithComma($value) {        return MyFormat::formatNumberWithComma($value);    }        // MAR 20, 2014 - ANH DUNG    public function formatNumberOnly($value) {        return number_format($value);    }    public function formatNumberCurrency($value, $country = 'sg') {        if (is_array($value)) {            if (empty($value['currencyType']))                $currencyType = 'SGD';            else                $currencyType = $value['currencyType'];            return number_format((float) $value['number'], 2) . " (" . $currencyType . ")";        }        else            return $value = "";    }    public function formatNotice($data) {        $str = '';        $str.= "<div style='color: #C00;'>" . $data . "</div>";        return $str;    }    /**     * @Author: ANH DUNG Apr 02, 2014     * @Todo: format id_type Landlord at BE      * @Param: $model model user     */     public function formatLandLorIdType($model) {         if(isset(Users::$aIdType[$model->id_type]))             return Users::$aIdType[$model->id_type];         return '';     }         /**     * @Author: ANH DUNG Apr 02, 2014     * @Todo: format upload_employment_pass_passport Tenant at BE      * @Param: $model model user     */     public function formatEmploymentPassPassport($data) {         $model = $data['model'];         $fieldName = $data['fieldName'];         $res='';         $file = ROOT."/".Users::$folderUpload."/"."$model->id/".$model->$fieldName;         if(file_exists($file) && !empty($model->$fieldName)){             $link = Yii::app()->createAbsoluteUrl(Users::$folderUpload."/$model->id/".$model->$fieldName);             $res="<a href='$link' target='_blank'>".$model->$fieldName."</a>";         }         return $res;     }    /**     * @Author: Jason Apr 11, 2014     * @Todo: format Photo     * @Param: $model model report defect     */    public function formatPhoto($model) {        $res='';        $file = ROOT."/".ProReportDefect::$folderUpload."/"."$model->id/".$model->photo;        if(file_exists($file) && !empty($model->photo)){            $link = Yii::app()->createAbsoluteUrl(ProReportDefect::$folderUpload."/$model->id/".$model->photo);            $res="<a class='show-image' href='$link' >".$model->photo."</a>";        }        return $res;    }        /**     * <Jason>     * @param type $model     * @return string     */    public function formatPhotoAdmin($model) {        $link='';//        $file = ROOT."/".ProReportDefect::$folderUpload."/"."$model->id/".$model->photo;//        if(file_exists($file) && !empty($model->photo)){//            $link = Yii::app()->createAbsoluteUrl(ProReportDefect::$folderUpload."/$model->id/".$model->photo);//        }        $linkSmall = ImageProcessing::bindImageByModel($model, 140, 105);        $linkBig = ImageProcessing::bindImageByModel($model, 1024, 768);        $img = "<a class='gallery show-image' href='$linkBig'>";        $img .= CHtml::image($linkSmall, 'Photo', array('width'=>'140px', 'height'=>'105px'));        $img .= "</a>";        return $img;    }    /**     * @Author: Jason Apr 16, 2014     * @Todo: format Document     * @Param: $model ProTransactionsPropertyDocument     */    public function formatDocument($model) {        $res='';        $file = ROOT."/".  ProTransactionsPropertyDocument::$folderUpload."/"."$model->transactions_id/".$model->file_name;        if(file_exists($file) && !empty($model->file_name)){            $link = Yii::app()->createAbsoluteUrl(ProTransactionsPropertyDocument::$folderUpload."/$model->transactions_id/".$model->file_name);            $res="<a class='show-image' href='$link' >View</a>";        }        return $res;    }        /**     * @Author: Jason Apr 21, 2014     * @Todo: format Document Uploaded By Admin     * @Param: $model ProTransactionsPropertyDocument     */    public function formatDocumentAdmin($model) {        $res='';        $file = ROOT."/". ProUploadDocument::$folderUpload."/"."$model->user_id/".$model->file_name;        if(file_exists($file) && !empty($model->file_name)){            $link = Yii::app()->createAbsoluteUrl(ProUploadDocument::$folderUpload."/$model->user_id/".$model->file_name);            $res="<a class='show-image' href='$link' >".$model->file_name."</a>";        }        return $res;    }        /**     * @Author: ANH DUNG Apr 02, 2014     * @Todo: format full name of  Registered Users  at BE      * @Param: $model model user     */     public function formatFullNameRegisteredUsers($model) {         if(is_null($model)) return '';         if($model->role_id==ROLE_REGISTER_MEMBER || $model->role_id==ROLE_AGENT){             return $model->title." $model->first_name $model->last_name";         }         return $model->first_name;     }          public function formatFullNameUsers($model) {        if(is_null($model)) return '';        return $model->title." $model->first_name $model->last_name";     }         /**     * @Author: ANH DUNG Apr 02, 2014     * @Todo: format name of Agent Commission Scheme     * @Param: $model model user     */     public function formatAgentCommissionScheme($model) {         if(is_null($model)) return '';         if($model->rCommissionSchema){             return $model->rCommissionSchema->name;         }         return '';     }         /**     * @Author: ANH DUNG Apr 02, 2014     * @Todo: format phone of  Registered Users  at BE      * @Param: $model model user     */     public function formatFullPhone($model) {         return CmsFormatter::getFullPhone($model->area_code_id, $model->phone);     }         /**     * @Author: ANH DUNG Apr 08, 2014     * @Todo: format list tier manager of agetn at list BE      * @Param: $model model user     */     public function formatListTierManager($model) {         $res = '';         if(count($model->rAgentTierManager)){            foreach($model->rAgentTierManager as $key=>$item){                $res .= ($key+1).". ".($item->rTier?$item->rTier->first_name:"")."<br>";            }         }         return trim($res, '<br>');     }         // edit by ANH DUNG Apr 02, 2014    public static function getFullPhone($area_code_id, $phone) {            $areacode = AreaCode::GetAreaCodeById($area_code_id);            $str_phone='';            if($areacode == 0) {                if(!empty($phone))                     $str_phone = $phone;            } else {                if(!empty($phone))                     $str_phone = '+'.$areacode.' '.$phone;            }            return $str_phone;    }         public function formatMtype($value) {        if ($value==1) {            return "Minimum";        } elseif ($value == 2) {            return "Maximum";        }    }        public function formatLongDate($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value)){            return '';        }else{            return date('d F Y', strtotime($value));        }    }    /**     * @param $value     * @return bool|string     * <Jason>     * <Input Y-m-d H:i:s - d F Y / H:M hrs >     */    public function formatDateTimeReport($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value)){            return '';        }else{            $date = date('d F Y', strtotime($value));            $time = date('H:i', strtotime($value));            return $date ."/".$time." hrs";        }    }    /**     * @param $value     * @return bool|string     * <Jason>     */    public function formatExpiredDate($value) {        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value)){            return '';        }else{            $currentDate = strtotime(date('Y-m-d'));            $number = $i = 30 * Yii::app()->params['number_month_expired']*24*60*60;                        if(($currentDate - strtotime($value)) >= $number)                return "<font color='red'>".date('d F Y', strtotime($value))."</font>";            else                return date('d F Y', strtotime($value));        }    }    /**     * @param $value     * @return bool|string     * <Jason>     * <To format date from Y-m-d H:i:s -> d F Y>     */    public function formatCallLogDate($value){        if ($value == '0000-00-00' || $value == '0000-00-00 00:00:00' || is_null($value)){            return '';        }else{            return date('d F Y', strtotime($value));        }    }    /**     * @param $value     * @return bool|string     * <Jason>     * <To format time from H:i:s -> d F Y>     */    public function formatCallLogTime($value){        if ($value == '00:00:00' || is_null($value)){            return '';        }else{            $time = date('H:i', strtotime($value));            return $time." hrs";        }    }    public function formatPricelisting($value, $number = 2) {        $text = number_format(round($value, $number), $number);        $arr = explode('.', $text);        if ($arr[1] == 0) {            $text = $arr[0];        }        return $text;    }       public function formatPropertyType($type){        if(is_numeric($type)){              return Listing::getListType($type);        }        return NULL;    }        public function formatPropertyTypeCompany($type){        return isset(Listing::$aTextSaleRentCompany[$type])?Listing::$aTextSaleRentCompany[$type]:'';    }    // ANH DUNG    public function formatTransactionPropertyName($model,$address=NULL){        $res = "";        if($model->listing){            $res = $model->listing->property_name_or_address;        }else{            $res = ProTransactions::GetPropertyNameByModelTrans($model);        }                if($address !=''){            $res .= " - $address";        }           return $res;    }        // ANH DUNG    public function formatTransactionPropertyPrice($model){		$p = $model->type==ProTransactions::FOR_RENT ? 			$model->tenancy_amount : $model->transacted_price;		return $this->formatPrice($p);    }        // ANH DUNG    public function formatTransListingType($model){		if (!$model->rPropertyDetail->listing_type_id) return null;        return ProTransactionsPropertyDetail::$aListingType[$model->rPropertyDetail->listing_type_id];    }    // ANH DUNG    public function formatLinkCallsLog($model) {        $res='';        $link = Yii::app()->createAbsoluteUrl("admin/callsLog/index",                                    array("id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/img/calls.png';        $res="<a class='' target='_blank' href='$link' ><img alt='View Calls Log' src='$src'></a>";                return $res;    }            /**     * <Jason>     * @param type $model     * @return type     */    public function formatLinkReportDefect($model) {        $res='';        $link = Yii::app()->createAbsoluteUrl("admin/reportDefect",                                    array("id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/img/report.png';        $res="<a class='' target='_blank' href='$link' ><img alt='View Report Defect(s)' src='$src'></a>";                return $res;    }        public function formatLinkInventoryPhoto($model) {        $res='';        $link = Yii::app()->createAbsoluteUrl("admin/tenancy/inventoryPhoto",                                    array("id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/img/png-file-icon.png';        $res="<a class='' target='_blank' href='$link' title='View Inventory Photo'><img alt='View Inventory Photo' src='$src'></a>";                return $res;    }            public function formatLinkAirconServices($model) {        $res='';        $link = Yii::app()->createAbsoluteUrl("admin/airconService/index",                                    array("id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/img/folder.jpg';        $res="<a class='' target='_blank' href='$link' title='View Aircon Services'><img alt='View Inventory Photo' src='$src'></a>";        return $res;    }            public function formatTakeOff($key){        if($key==0){            return  'No';        }        if($key==1){            return  'Yes';        }    }//    public function formatStatusListing($status){//        if ($status == 0){//            return 'No';//        }//        if ($status == 1){//            return 'Yes';//        }////    }    public function formatStatusListing($value) {        if (is_array($value)) {            return (($value['status'] == self::STATUS_INACTIVE) ?                            CHtml::link(                                    "No", array("ajaxActivate", "id" => $value['id']), array(                                "class" => "ajaxupdate",                                "title" => "Click here to " . $this->publishFormat[1],                                    )                            ) :                            CHtml::link(                                    "Yes", array("ajaxDeactivate", "id" => $value['id']), array(                                "class" => "ajaxupdate",                                "title" => "Click here to " . $this->publishFormat[0],                                    )                            )                    );        }        else            return $value == 0 ? $this->statusFormat['0'] : $this->statusFormat['1'];    }                   public function formatStatusPendingListing($data){                 // request to take off / mode to tab past        if($data->take_off==1)  return 'Take off';        if($data->status_approve==STATUS_PEDING_APPROVE) return 'To publish';        if($data->status_approve==STATUS_PEDING_REMOVE) return 'To remove';    }        public function formatStatusAdminApprove($data){                return  '<div class="btn-group">'                . '<a href="#" id="yw0" class="btn btn-small dropdown-toggle" data-toggle="dropdown">--Select-- <span class="caret"></span></a>'                . '<ul class="dropdown-menu" id="yw1">'                . '<li><a class="btn-publish" href="javascript:;" rel="'.Yii::app()->createAbsoluteUrl('admin/listing/publishlisting',array('id'=>$data->id)).'" tabindex="-1">Publish Listing</a></li>'                . '<li><a class="btn-admin-take-off" href="javascript:;" rel="'.Yii::app()->createAbsoluteUrl('admin/listing/take_off',array('id'=>$data->id)).'" tabindex="-1">Approve take off</a></li>'                . '<li><a class="AddVendorDetails" data-fancybox-type="iframe" href="'.Yii::app()->createAbsoluteUrl('ajax/remark_detail',array('id'=>$data->id)).'" tabindex="-1">Reject Listing</a></li>'                . '</ul></div>';    }        public function formatLinkListing($data){        $module = 'member';        if(Yii::app()->controller->module->id =='admin'){             $module = 'admin';        }             if($data->status_listing==STATUS_LISTING_ACTIVE){            return CHtml::link(strip_tags($data->property_name_or_address),Yii::app()->createAbsoluteUrl('site/listingdetail',array('slug'=>$data->slug)), array('target'=>'_blank'));        }else{            return  CHtml::link(strip_tags($data->property_name_or_address),Yii::app()->createAbsoluteUrl($module.'/listing/create',array('id'=>$data->id)), array('target'=>'_blank'));        }    }        public function formatRemarkByAdmin($data){               return  CHtml::link(                    'View Detail',                    Yii::app()->createAbsoluteUrl('ajax/remark_detail', array('id'=>$data->id)),                     array(                        'data-fancybox-type'=>'iframe',                        'class'=>'AddVendorDetails'                    )                );    }        public function formatAppealByMember($data){               return  CHtml::link(                    'View detail',                    Yii::app()->createAbsoluteUrl('ajax/appeal', array('id'=>$data->id)),                     array(                        'data-fancybox-type'=>'iframe',                        'class'=>'appeal'                    )                );    }        public function formatStatusTakeOff($data){        if($data->take_off==1) return 'Take off';        else{            if($data->listing_type==1) return 'Rented';            else return 'Sold';        }    }        public function formatCurrentStatusListing($status){                $data = array(            STATUS_LISTING_ACTIVE =>'Active',            STATUS_LISTING_PENDING =>'Pending',            STATUS_LISTING_REJECTED =>'Reject',            STATUS_LISTING_PAST =>'Past',            STATUS_LISTING_DRAFT =>'Draft',        );        if(isset($data[$status])) return $data[$status];            }    /*     * ---------------------------------------------     * Author : dtoan     * Email  : ghostkissboy12@gmail.com     * Format reason take off     * --------------------------------------------- */     public function formatReasonTakeOff($data) {        if(isset($data->take_off_content) && $data->take_off_content !=''){            return '<a class="view_take_off" href="javascript:;" rel="reason_'.$data->id.'" >View</a> <input type="hidden" id="reason_'.$data->id.'" value="'.strip_tags($data->take_off_content).'">';        }    }        /**     * @Author: ANH DUNG May 23, 2014     * @Todo: format access distric of agent in view BE     * @Param: $model model user     */    public function formatProAgentDistrict($model){        $str='';        if(count($model->rAgentDistrict)){            $aDistrictId = CHtml::listData($model->rAgentDistrict,'district_id','district_id');            $aName = ProLocation::getListDataLocation($aDistrictId);            $str .= implode("<br>", $aName);        }        return $str;    }            /**     * @Author: ANH DUNG May 23, 2014     * @Todo: format access distric of Engage in view BE     * @Param: $ArrId     */    public function formatEngageDistrict($ArrId){        $str='';        if(trim($ArrId) != ''){            $aName = ProLocation::getListDataLocation(explode(',', $ArrId));            $str .= implode("<br>- ", $aName);        }        if($str!='')            $str = "- ".$str;        return $str;    }    /**     * @Author: ANH DUNG May 26, 2014     * @Todo: format TenancyExpiryDate     * @Param: $model model bankrequest     */    public function formatTenancyExpiryDate($model){        $cmsFormater = new CmsFormatter();        $str='No';        if($model->tenancy_expiry_datepicker!='' && strtolower($model->tenancy_expiry_date)=='yes'){            $str = $cmsFormater->formatDate($model->tenancy_expiry_datepicker);        }        return $str;    }    /*     * DTOAN     *      */        public function formatViewtransactionFromListing($data){        if(count($data->rTransaction)>0){            return CHtml::link(($data->listing_type==1) ? "Rented" :"Sold",Yii::app()->createAbsoluteUrl("admin/transactions/index",array("listing_id"=>$data->id)),array("target"=>"_blank"));        }    }        /**     * @Author: ANH DUNG Jul 07, 2014     * @Todo: hiển thị ReceivedCommission nếu đã gen invoice     * @Param: $mTransCommission     */    public function formatTransReceivedCommission($mTransCommission){        $res = '';        $cmsFormater = new CmsFormatter();        if($mTransCommission->status == STATUS_GEN_RECEIPT){            $res = $cmsFormater->formatPrice($mTransCommission->received_commission);        }        return $res;    }    public function formatTransReceivedCommissionDate($mTransCommission){        $res = '';        $cmsFormater = new CmsFormatter();        if($mTransCommission->status == STATUS_GEN_RECEIPT){            $res = $cmsFormater->formatDate($mTransCommission->received_on);        }        return $res;    }        // ANH DUNG    public function formatAirconDateTime($model){        $cmsFormater = new CmsFormatter();        $res = $cmsFormater->formatDate($model->schedule_date);        $res .=  " / ".$model->schedule_time;        return $res;    }        // ANH DUNG    public function formatAirconFile($model){        $res = '';        $cmsFormater = new CmsFormatter();        $path = '/'.ProAirconService::$folderUpload."/$model->upload_service_documents";        if (is_file(Yii::getPathOfAlias("webroot") . $path)) {            $link = Yii::app()->createAbsoluteUrl('/').'/'.ProAirconService::$folderUpload."/$model->upload_service_documents";            $res="<a class='' target='_blank' href='$link' >Download</a>";//            $res="<a class='' target='_blank' href='$link' >Service Documents</a>";        }        return $res;    }            // ANH DUNG    public function formatGenInvoice($model){        $res = '';        if(!$model->admin_approved){            return $res;        }//        $link = Yii::app()->createAbsoluteUrl('admin/transactions/ajaxGenInvoice', array('transactions_id'=>$model->id));//        if($model->status == STATUS_ACTIVE){//            $res="<a class='gen_invoice' DoAction='Invoice' target='_blank' href='javascript:void(0)' next='$link' >Click To Gen Invoice</a>";//        }elseif ($model->status > STATUS_ACTIVE) {            foreach($model->rInvoice as $mInvoice){                $link = Yii::app()->createAbsoluteUrl('admin/transactions/viewInvoice', array('id'=>$mInvoice->id));                $res .= "<a class='' DoAction='Invoice' target='_blank' href='$link' next='$link' >$mInvoice->invoice_number</a><br>";            }            $res = rtrim($res, "<br>");//        }        return $res;    }        public function formatGenVoucher($model){        $res='';        if(!$model->admin_approved){            return $res;        }        $link = Yii::app()->createAbsoluteUrl("admin/transactionsVoucher/index",                                    array("transactions_id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/img/folder.jpg';        $res="<a class='' target='_blank' href='$link' ><img title='List Voucher' alt='List Voucher' src='$src'></a>";        return $res;    }        public function formatGenReceipt($model){        $res = '';        if(!$model->admin_approved){            return $res;        }        $link = Yii::app()->createAbsoluteUrl('admin/transactions/ajaxGenReceipt', array('transactions_id'=>$model->id));        $res="<a class='gen_receipt' DoAction='Receipt' href='$link' next='$link' >Generate Receipt</a>";        $mReceipt = $model->rReceipt;        if ($model->status == STATUS_GEN_RECEIPT && $mReceipt) {            $link = Yii::app()->createAbsoluteUrl('admin/transactions/viewInvoice', array('id'=>$mReceipt->id));            $res = "<a class='' DoAction='Invoice' target='_blank' href='$link' next='$link' >$mReceipt->invoice_number</a><br>";        }        return $res;    }        public function formatInvoiceGenReceipt($model){        $res = '';        $link = Yii::app()->createAbsoluteUrl('admin/fiInvoice/generateReceipt', array('invoice_id'=>$model->id));        $res="<a class='gen_receipt' DoAction='Receipt' href='$link' next='$link' >Generate Receipt</a>";        $mReceipt = $model->rInvoiceReceipt;        if ($model->status == FiInvoice::PAID && $mReceipt) {            $link = Yii::app()->createAbsoluteUrl('admin/fiInvoice/viewReceipt', array('id'=>$mReceipt->id));            $res = "<a class='' DoAction='Invoice' target='_blank' href='$link' next='$link' >$mReceipt->receipt_no</a>";        }        return $res;    }    /**     * @Author: ANH DUNG Jul 14, 2014     * @Todo: format some field for listing     * @Param: $model model Listing     */    public function formatListingFloorArea($model){        $res = '';        $res = MyFormat::formatNumberLeft($model->floor_area);        $res .= " ".$model->floor_area_unit;                $span_hidden = Listing::buildTR($model);                return $res.$span_hidden;    }    public function formatListingBedroom($model){        $res = Listing::getViewBedroom($model->of_bedroom);        return $res;    }    public function formatListingOwnerName($model){        $res = $model->rUser?$model->rUser->first_name:'';                                return $res;    }        public function formatListingCreatedBy($model){        $res = $model->rUserAdmin?$model->rUserAdmin->first_name:'';        return $res;    }        public function formatListingDistrict($model){        $res = ProLocation::getNameWithDistrict($model->location_id);        return $res;    }        /**     * @Author: ANH DUNG Feb 05, 2015     * @Todo: format company location FE Saleperson view     */    public function formatCompanyListingDistrict($model){        $res = "D".($model->location_id>9?$model->location_id:"$model->location_id");        return $res;    }        public function formatNameForAll($mUser){        if(is_null($mUser)) return '';        return "$mUser->first_name $mUser->last_name";    }        // ANH DUNG     public function formatTestimonialCreatedBy($model){        $cmsFormater = new CmsFormatter();        $res = '';        if($model->is_member){            $role_text = 'Landlord';            if($model->rUser){                if($model->rUser->role_id==ROLE_TENANT){                    $role_text = 'Tenant';                }            }                        }else{            $role_text = 'Admin';        }        return $res = "[$role_text] ". $cmsFormater->formatNameForAll($model->rUser);    }        // ANH DUNG Oct 22, 2014    public function formatTestimonialType($model){        if(isset(ProTestimonial::$ARR_TYPE[$model->type])){            return ProTestimonial::$ARR_TYPE[$model->type];        }        return '';    }     public function formatReportApproveBy($model){        if($model->status == 0) return '';        $mUser = $model->status==CmsFormatter::COMPLETE_REPORT?$model->rUserComplete:$model->rUserProgess;        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatNameForAll($mUser);    }    public function formatReportApproveDate($model){        $res = '';        if($model->status==CmsFormatter::COMPLETE_REPORT){            $cmsFormater = new CmsFormatter();            $res = $cmsFormater->formatDate($model->approved_date);        }        return $res;            }    public function formatReportApproveRemark($model){        $res = '';        if($model->status==CmsFormatter::COMPLETE_REPORT){            $cmsFormater = new CmsFormatter();            $res = $model->remark;        }        return $res;     }        public function formatTransClientCommission($model){        if(!$model->admin_approved){            return ProTransactions::$WAIT_APPROVE_TEXT;        }        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatPrice($model->client_commission);    }        public function formatTransReceivableGrossCommission($model){        if(!$model->admin_approved){            return ProTransactions::$WAIT_APPROVE_TEXT;        }        $cmsFormater = new CmsFormatter();        // Feb 02, 2015 For Rent Receivable Gross Commission should be rental + 7% GST        return $cmsFormater->formatPrice($model->receivable_gross_commission);    }        public function formatTransNetCommissionAfterDeduction($model){        if(!$model->admin_approved){            return ProTransactions::$WAIT_APPROVE_TEXT;        }        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatPrice($model->net_commission_after_deduction);    }        public function formatTransOverridingAmount($model){        if(!$model->admin_approved){            return ProTransactions::$WAIT_APPROVE_TEXT;        }        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatPrice($model->overriding_amount);    }        public function formatListingCompanyStatus($model){        if(isset(Listing::$STATUS_COMPANY_[$model->company_listing_status])){            return Listing::$STATUS_COMPANY_[$model->company_listing_status];        }        return '';    }        /**     * @Author: ANH DUNG Aug 28, 2014     * @Todo: display full name of user     * @Param: $model model      * @Return: full name with salution of user     */       public function formatCompanyDncExpiryDate($model){        $cmsFormater = new CmsFormatter();        $dnc_expiry_date = $cmsFormater->formatDate($model->dnc_expiry_date);        return "$dnc_expiry_date $model->dnc_expiry_date_text";    }    /**     * @Author: DTOAN  12-9-2014     */     public function formatPrintPaymentVoucher($model){        $res='';        $link = Yii::app()->createAbsoluteUrl("admin/fiInvoice/printvoucher", array("id"=>$model->id));        $src = Yii::app()->theme->baseUrl . '/admin/images/print-icon.png';        $res="<a class='' target='_blank' href='$link' ><img title='Print Voucher' alt='Print Voucher' src='$src'></a>";        return $res;    }            // ANH DUNG Sep 21, 2014    public function formatSumReportInvoiceNo($model){        $res = '';        if(!$model->admin_approved){            return $res;        }        foreach($model->rInvoice as $mInvoice){            $link = Yii::app()->createAbsoluteUrl('admin/transactions/viewInvoice', array('id'=>$mInvoice->id));            $res .= "$mInvoice->invoice_number<br>";        }        $res = rtrim($res, "<br>");        return $res;    }            // ANH DUNG Sep 19, 2014    public function formatSumReportClientCom($model){        $cmsFormater = new CmsFormatter();        // init ProTransactionsSaveCommission::ReportGetAllClientComm(); line 173        if(isset($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id])){            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id]);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportReceivableCommissionAmount($model){        $cmsFormater = new CmsFormatter();        if(isset($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id])){            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id]);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportReceivedCommissionAmount($model){        $cmsFormater = new CmsFormatter();        if(isset($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id])){            $mReceipt = $model->rReceipt;            $cmsFormater = new CmsFormatter();            if($mReceipt)                return $cmsFormater->formatPrice($_SESSION['DATA_COMM_REPORT']['GrossCommissiontoCompany'][$model->id]);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportReceivedDate($model){        if($model->status == STATUS_GEN_RECEIPT){            $mReceipt = $model->rReceipt;            $cmsFormater = new CmsFormatter();            if($mReceipt)                return $cmsFormater->formatDate($mReceipt->receipt_date_paid);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportComExternalCobrokeAgent($model){        if($model->invoice_bill_to == ProTransactions::BILL_TO_EXTERNAL_CO_BROKE){            return ProTransactionsBillTo::SumReportExternalCobroke($model);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportComPayableExternalCobrokeAgent($model){        return ProTransactionsSaveCommission::calcComExternalCoBroke($model);    }        // ANH DUNG Sep 19, 2014    public function formatSumReportExternalCobrokeAgentCompany($model){//        ProTransactionsSaveCommission::SumReportGetInfoExternalCoBroke($model);        if(isset($_SESSION['AGENT_COMPANY_NAME'][$model->id]['agent_company']))            return $_SESSION['AGENT_COMPANY_NAME'][$model->id]['agent_company'];        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportExternalCobrokeAgentName($model){//        ProTransactionsSaveCommission::SumReportGetInfoExternalCoBroke($model);        if(isset($_SESSION['AGENT_COMPANY_NAME'][$model->id]['agent_name']))            return $_SESSION['AGENT_COMPANY_NAME'][$model->id]['agent_name'];        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportDatePaidExernalCobroke($model){        if($model->status == STATUS_GEN_RECEIPT){            $receipt_date_paid = ProTransactionsInvoice::ReportGetDatePaidExternalCobroke($model);            $cmsFormater = new CmsFormatter();            if(!empty($receipt_date_paid))                return $cmsFormater->formatDate($receipt_date_paid);        }        return '';    }    // ANH DUNG Sep 19, 2014    public function formatSumReportGrossCommissiontoCompany($model){        if(isset($_SESSION['DATA_COMM_REPORT']['GrossCommissionAmount'][$model->id])){            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($_SESSION['DATA_COMM_REPORT']['GrossCommissionAmount'][$model->id]);        }        return '';    }        // ANH DUNG Sep 19, 2014    public function formatSumReportSalespersonName($model){        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatFullNameRegisteredUsers($model->rUser);    }        // ANH DUNG Sep 19, 2014    public function formatSumReportCommissionPayabletoSalesperson($model){         // init ProTransactionsSaveCommission::ReportGetAllClientComm(); line 173        if(isset($_SESSION['DATA_COMM_REPORT']['AmountAtGross'][$model->id])){            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($_SESSION['DATA_COMM_REPORT']['AmountAtGross'][$model->id]);        }        return '';    }        // ANH DUNG Sep 20, 2014    public function formatSumReport1stTierName($model){        if(isset($_SESSION['DATA_TIER']['TIER_1ST'][$model->id])){            $mTransSaveCom = $_SESSION['DATA_TIER']['TIER_1ST'][$model->id];            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatFullNameRegisteredUsers($mTransSaveCom->rUser);        }        return '';    }    // ANH DUNG Sep 20, 2014    public function formatSumReport1stTierOverriding($model){        if(isset($_SESSION['DATA_TIER']['TIER_1ST'][$model->id])){            $mTransSaveCom = $_SESSION['DATA_TIER']['TIER_1ST'][$model->id];            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($mTransSaveCom->overriding_amount);        }        return '';    }            // ANH DUNG Sep 20, 2014    public function formatSumReport2ndTierName($model){        if(isset($_SESSION['DATA_TIER']['TIER_2ND'][$model->id])){            $mTransSaveCom = $_SESSION['DATA_TIER']['TIER_2ND'][$model->id];            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatFullNameRegisteredUsers($mTransSaveCom->rUser);        }        return '';    }    // ANH DUNG Sep 20, 2014    public function formatSumReport2ndTierOverriding($model){        if(isset($_SESSION['DATA_TIER']['TIER_2ND'][$model->id])){            $mTransSaveCom = $_SESSION['DATA_TIER']['TIER_2ND'][$model->id];            $cmsFormater = new CmsFormatter();            return $cmsFormater->formatPrice($mTransSaveCom->overriding_amount);        }        return '';    }        // ANH DUNG Sep 20, 2014    public function formatSumReportTelemarketerName($model){        if($model){            if($model->rPropertyDetail->listing_type_id == ProTransactionsPropertyDetail::VAR_COMPANY){                if($model->rListing->rCompanyListing){                                        $cmsFormater = new CmsFormatter();                    return $cmsFormater->formatFullNameRegisteredUsers($model->rListing->rCompanyListing->rUser);                }            }                    }        return '';    }        // ANH DUNG Sep 20, 2014    public function formatSumReportTelemarketerComm($model){        if($model){            if($model->rPropertyDetail->listing_type_id == ProTransactionsPropertyDetail::VAR_COMPANY){                if($model->rListing->rCompanyListing){                    if(isset($_SESSION['TOTAL_COMPANY_COM'][$model->id])){                        $TelemarketerComm = ($_SESSION['TOTAL_COMPANY_COM'][$model->id]*Yii::app()->params['telemarketer_comm'])/100;                        $cmsFormater = new CmsFormatter();                        return $cmsFormater->formatPrice($TelemarketerComm);                    }                }            }        }        return '';    }        // ANH DUNG Sep 20, 2014    public function formatSumReportNetCommissionEarnedbyCompany($model){        $cmsFormater = new CmsFormatter();        if($model){                        if($model->rPropertyDetail->listing_type_id == ProTransactionsPropertyDetail::VAR_COMPANY){                if($model->rListing->rCompanyListing){                    if(isset($_SESSION['TOTAL_COMPANY_COM'][$model->id])){                        $TelemarketerComm = ($_SESSION['TOTAL_COMPANY_COM'][$model->id]*Yii::app()->params['telemarketer_comm'])/100;                        $NetCompany = $_SESSION['TOTAL_COMPANY_COM'][$model->id] - $TelemarketerComm;                        return $cmsFormater->formatPrice($NetCompany);                    }                }            }        }        if(isset($_SESSION['TOTAL_COMPANY_COM'][$model->id])){            return $cmsFormater->formatPrice($_SESSION['TOTAL_COMPANY_COM'][$model->id]);        }        return '';    }            // ANH DUNG Oct 21, 2014    public function formatInvoicePropertyAddress($model){        $res = '';        foreach ($model->rDetail as $key=>$item){            $res .= "<b>".($key+1).".</b> ".FiInvoiceDetail::fnBuildDescription($item)."<br>";        }        return $res;    }        // ANH DUNG Oct 22, 2014    public function formatTransactionInvoiceTransNo($model){        $res = '';        if($model->rTransaction){           $res = $model->rTransaction->transactions_no;         }        return $res;    }        // ANH DUNG Oct 22, 2014    public function formatTransactionInvoiceAmount($model){        $res = '';        $mTransactions = $model->rTransaction ;         if($mTransactions){           $cmsFormater = new CmsFormatter();           $mBillTo = $mTransactions->rBillTo;           $CommissionAmount = $mBillTo->commission_amount_gst;            $res = $cmsFormater->formatPrice($CommissionAmount);        }        return $res;    }        // ANH DUNG Oct 23, 2014    public function formatPaymentVoucherPropertyAddress($model){        $res = '';        foreach ($model->rDetail as $key=>$item){            $mInvoiceDetail = FiInvoiceDetail::GetOneInvoiceDetail($item->invoice_id);            if($mInvoiceDetail){                $res .= "<b>".($key+1).".</b> ". $mInvoiceDetail->description."<br>";            }        }        return $res;    }        // ANH DUNG Oct 23, 2014    public function formatVoucherPaymentMode($model){		if (!$model->payment_mode) return null;        return isset(FiPaymentVoucher::$ARR_PAYMENT_MODE[$model->payment_mode])?FiPaymentVoucher::$ARR_PAYMENT_MODE[$model->payment_mode]:'';    }        // ANH DUNG Oct 23, 2014    public function formatBannerImageBe($data){        if(file_exists(Yii::getPathOfAlias("webroot")."/upload/admin/banner/".$data->id."/".$data->large_image)){            if( trim($data->link) !='' ){                $LinkImage = Yii::app()->baseUrl."/upload/admin/banner/".$data->id."/".$data->large_image;                $img = "<a target='_blank' href='$data->link'>";                $img .= CHtml::image($LinkImage, 'image', array("class"=>"b_img") );                $img .= "</a>";                return $img;            }else{                return  CHtml::image(Yii::app()->baseUrl."/upload/admin/banner/".$data->id."/".$data->large_image, "image", array("class"=>"b_img"));            }                  }        return "";    }            // ANH DUNG Jan 19, 2015    public function formatOpportuniryCareer($data){        $link = Yii::app()->createAbsoluteUrl('site/view_job', array('slug'=>$data->slug));        $res = "<a target='_blank' href='$link'>";        $res .= $data->title;        $res .= "</a>";        return $res;    }    // HTram August 18, 2015    public function formatAgentName($data) {        $res='';        if(!empty($data->user_id)){            if($data->user){                $link = Yii::app()->createAbsoluteUrl("admin/usersAgent/view",array("id"=>$data->user_id));                $cmsFormater = new CmsFormatter();                $name = $cmsFormater->formatFullNameRegisteredUsers($data->user);//                $name = $data->user->first_name.' '.$data->user->last_name;                $res .="<a class='' target='_blank' href='$link'>$name</a>";                //update full_name_for_search at Users                $data->user->full_name_for_search = $name;                $data->user->update(array('full_name_for_search'));            }        }        return $res;    }       // HTram August 18, 2015    public function formatCallsLogPopup($data) {        $res='';        $transaction = $data->rTransactionOnly;        if($transaction){            $src = Yii::app()->theme->baseUrl . '/img/calls.png';            $res .= "<a class='' target='_blank' href='javascript:;' data-target='#modalCallsLog-$transaction->id' data-toggle='modal' class='pop-up-callslog-$transaction->id'><img alt='View Calls Log' src='$src'></a>";        }                return $res;    }     // HTram August 18, 2015    public function formatCallsLogModal($data) {        $res='';        $titleH1='';        $transaction = $data->rTransactionOnly;        if($transaction){                $cmsFormater = new CmsFormatter();                $arrVal = array("name"=>$transaction->listing->property_name_or_address, "transaction_id"=>$transaction->id);                $sPropertyName = $cmsFormater->formatpropertyname($arrVal);                $tenancy_agreement_date = $cmsFormater->formatLongDate($transaction->tenancy_agreement_date);                $expiring_date = $cmsFormater->formatLongDate($transaction->expiring_date);                $titleH1 = $sPropertyName." [ $tenancy_agreement_date - $expiring_date ] ";                                $link = Yii::app()->createAbsoluteUrl("member/agent/callslog",array("transaction_id"=>$transaction->id));//            if($transaction->listing){//                $titleH1 = $transaction->listing->property_name_or_address;//            }else{//                $titleH1 = ProTransactions::GetPropertyNameByModelTrans($transaction);//            }            $res .= "<div class='modal fade display_none' id='modalCallsLog-$transaction->id' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>                <div class='modal-dialog' style='width:910px;'>                    <div class='modal-content'>                        <div class='modal-header'>                            <a class='close' data-dismiss='modal'>&times;</a>                            <h3><b>Calls Log: $titleH1</b></h3>                        </div>                        <div class='modal-body' style='height: 600px;overflow-y: scroll; padding:0 20px;'>                             <iframe src='$link' width='850' height='500' frameborder='0'></iframe>                         </div>                    </div>                </div>            </div>";        }        return $res;    }    /**     * @Author: HTram August 24, 2015     * @Todo: format upload_employment_pass_passport Tenant at BE      * @Param: $model model ProTransactionsVendorPurchaserDetail     */    public function formatViewUploadFile($data) {         $model = $data['model'];         $fieldName = $data['fieldName'];         $res='';         $file = ROOT."/".ProTransactionsVendorPurchaserDetail::$folderUpload."/"."$model->id/".$model->$fieldName;         if(file_exists($file) && !empty($model->$fieldName)){             $link = Yii::app()->createAbsoluteUrl(ProTransactionsVendorPurchaserDetail::$folderUpload."/$model->id/".$model->$fieldName);             $res="<a href='$link' target='_blank'>".$model->$fieldName."</a>";			 $removeUrl = Yii::app()->createUrl('admin/ajax/removeModelImage', array(				 'class'=>get_class($model),				 'field'=>$fieldName,				 'id'=>$model->id			));			 $res.= sprintf('&nbsp;&nbsp;<a href="%s" class="remove-img-ajax"><img src="%s/img/gridview/delete.png" /></a>',				 $removeUrl, Yii::app()->theme->baseUrl);         }         return $res;    }    public function formatViewTransactionPropertyDocument($data,$id_trans) {         $model = $data['model'];         $fieldName = $data['fieldName'];         $res='';         $file = ROOT."/".  ProTransactionsPropertyDocument::$folderUpload."/"."$id_trans/".$model->$fieldName;         if(file_exists($file) && !empty($model->$fieldName)){             $link = Yii::app()->createAbsoluteUrl(ProTransactionsPropertyDocument::$folderUpload."/$id_trans/".$model->$fieldName);             $res="<a href='$link' target='_blank'>".$model->$fieldName."</a>";         }         return $res;    }    // HTram August 28, 2015    public function formatReportDefectPopup($data) {        $res='';        $transaction = $data->rTransactionOnly;        if($transaction){            $src = Yii::app()->theme->baseUrl . '/img/report.png';            $res .= "<a class='' target='_blank' href='javascript:;' data-target='#modalReportDefect-$transaction->id' data-toggle='modal' class='pop-up-report-defect-$transaction->id'><img alt='View Report Defect' src='$src'></a>";        }        return $res;    }     // HTram August 18, 2015    public function formatReportDefectModal($data) {        $res='';        $titleH1='';        $transaction = $data->rTransactionOnly;        if($transaction){                $cmsFormater = new CmsFormatter();                $arrVal = array("name"=>$transaction->listing->property_name_or_address, "transaction_id"=>$transaction->id);                $sPropertyName = $cmsFormater->formatpropertyname($arrVal);                $tenancy_agreement_date = $cmsFormater->formatLongDate($transaction->tenancy_agreement_date);                $expiring_date = $cmsFormater->formatLongDate($transaction->expiring_date);                $titleH1 = $sPropertyName." [ $tenancy_agreement_date - $expiring_date ] ";                                $link = Yii::app()->createAbsoluteUrl("member/agent/ReportDefect",array("transaction_id"=>$transaction->id));            $res .= "<div class='modal fade display_none' id='modalReportDefect-$transaction->id' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>                <div class='modal-dialog' style='width:910px;'>                    <div class='modal-content'>                        <div class='modal-header'>                            <a class='close' data-dismiss='modal'>&times;</a>                            <h3><b>Report Defect: $titleH1</b></h3>                        </div>                        <div class='modal-body' style='height: 600px;overflow-y: scroll; padding:0 20px;'>                             <iframe src='$link' width='850' height='500' frameborder='0'></iframe>                         </div>                    </div>                </div>            </div>";        }        return $res;    }    // HTram August 28, 2015    public function formatInventoryPhotoPopup($data) {        $res='';        $transaction = $data->rTransactionOnly;        if($transaction){            $src = Yii::app()->theme->baseUrl . '/img/png-file-icon.png';            $res .= "<a class='' target='_blank' href='javascript:;' data-target='#modalInventoryPhoto-$transaction->id' data-toggle='modal' class='pop-up-inventory-photo-$transaction->id'><img alt='View InventoryPhoto' src='$src'></a>";        }        return $res;    }     // HTram August 28, 2015    public function formatInventoryPhotoModal($data) {        $res='';        $titleH1='';        $transaction = $data->rTransactionOnly;        if($transaction){                $cmsFormater = new CmsFormatter();                $arrVal = array("name"=>$transaction->listing->property_name_or_address, "transaction_id"=>$transaction->id);                $sPropertyName = $cmsFormater->formatpropertyname($arrVal);                $tenancy_agreement_date = $cmsFormater->formatLongDate($transaction->tenancy_agreement_date);                $expiring_date = $cmsFormater->formatLongDate($transaction->expiring_date);                $titleH1 = $sPropertyName." [ $tenancy_agreement_date - $expiring_date ] ";                                $link = Yii::app()->createAbsoluteUrl("member/agent/InventoryPhoto",array("transaction_id"=>$transaction->id));            $res .= "<div class='modal fade display_none' id='modalInventoryPhoto-$transaction->id' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>                <div class='modal-dialog' style='width:910px;'>                    <div class='modal-content'>                        <div class='modal-header'>                            <a class='close' data-dismiss='modal'>&times;</a>                            <h3><b>Inventory Photo: $titleH1</b></h3>                        </div>                        <div class='modal-body' style='height: 600px;overflow-y: scroll; padding:0 20px;'>                             <iframe src='$link' width='850' height='500' frameborder='0'></iframe>                         </div>                    </div>                </div>            </div>";        }        return $res;    }    // HTram August 28, 2015    public function formatAirconServicesPopup($data) {        $res='';        $transaction = $data->rTransactionOnly;        if($transaction){            $src = Yii::app()->theme->baseUrl . '/img/folder.jpg';            $res .= "<a class='' target='_blank' href='javascript:;' data-target='#modalAirconServices-$transaction->id' data-toggle='modal' class='pop-up-aircon-services-$transaction->id'><img alt='View Aircon Services' src='$src'></a>";        }        return $res;    }     // HTram August 28, 2015    public function formatAirconServicesModal($data) {        $res='';        $titleH1='';        $transaction = $data->rTransactionOnly;        if($transaction){                $cmsFormater = new CmsFormatter();                $arrVal = array("name"=>$transaction->listing->property_name_or_address, "transaction_id"=>$transaction->id);                $sPropertyName = $cmsFormater->formatpropertyname($arrVal);                $tenancy_agreement_date = $cmsFormater->formatLongDate($transaction->tenancy_agreement_date);                $expiring_date = $cmsFormater->formatLongDate($transaction->expiring_date);                $titleH1 = $sPropertyName." [ $tenancy_agreement_date - $expiring_date ] ";                                $link = Yii::app()->createAbsoluteUrl("member/agent/AirconServices",array("transaction_id"=>$transaction->id));            $res .= "<div class='modal fade display_none' id='modalAirconServices-$transaction->id' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'>                <div class='modal-dialog' style='width:910px;'>                    <div class='modal-content'>                        <div class='modal-header'>                            <a class='close' data-dismiss='modal'>&times;</a>                            <h3><b>Aircon Services: $titleH1</b></h3>                        </div>                        <div class='modal-body' style='height: 600px;overflow-y: scroll; padding:0 20px;'>                             <iframe src='$link' width='850' height='500' frameborder='0'></iframe>                         </div>                    </div>                </div>            </div>";        }        return $res;    }	/*	 * @author Lam Huynh	 */	public function formatEnum($value,$data=array()) {		if (!$value) return '';		if (is_array($value)) {			$data = $value[1];			$value = $value[0];		}		return isset($data[$value]) ? $data[$value] : '';	}            }
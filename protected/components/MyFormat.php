<?php/** * @todo Class for date format * @author bb */class MyFormat{    public static $sMyDateFormat = 'd-M-Y' ;    public static $sMyCurrencyFormat = '#,##0' ;    public static $sCurrencyType = 'S$' ;    public static $sMyTimeFormat = 'H:i' ;    public static $sMyTimeFormatAM_PM = 'h:i A' ;    public static $sDateIndexListing = 'M d, Y' ;    public static $dateInvoice = 'd/m/Y H:i';    public static $text_area_newline = array("\n", "\r\n", "\r");    public static $BAD_CHAR = array('"',"'", "\\");    public static function date($date)//date in database or timestamp    {        $date = self::isTimeStamp($date) ? $date : strtotime($date);        return date(self::$sMyDateFormat,$date);    }    public static function  isTimeStamp($timestamp)    {        return ((string) (int) $timestamp === $timestamp)            && ($timestamp <= PHP_INT_MAX)            && ($timestamp >= ~PHP_INT_MAX);    }    public static function currency($decimal)    {         return self::$sCurrencyType.Yii::app()->numberFormatter->format(self::$sMyCurrencyFormat, $decimal);    }        public static function time($date)//time in database or timestamp    {        $date = self::isTimeStamp($date) ? $date : strtotime($date);        return date(self::$sMyTimeFormat,$date);    }    public static function timeAM($date)//time in database or timestamp    {        $date = self::isTimeStamp($date) ? $date : strtotime($date);        return date(self::$sMyTimeFormatAM_PM,$date);    }        /** to do: tính toán index cột excel     * @param: $index:      * @return: name index      */            public static function columnName($index)    {        --$index;        if($index >= 0 && $index < 26)                        return chr(ord('A') + $index);        else if ($index > 25)            return (MyFormat::columnName($index / 26)).(MyFormat::columnName($index%26 + 1));        else            throw new Exception("Invalid Column # ".($index + 1));    }         /**    @param: $date format: 20/05/2013    @param: $sign "/"    @return: date format: 2013-05-20    */    public static function dateConverDmyToYmd($date, $sign='/'){        if(empty($date)) return null;        $dateTmp = explode($sign, $date);        if(count($dateTmp)>2)            return $dateTmp[2].'-'.$dateTmp[1].'-'.$dateTmp[0];        return $date;    }            /** format date from db to format normal     * @param: $date: 2014-02-25     * @param: $format: default Yii::app()->params['dateFormat']     */    public static function dateConverYmdToDmy($date, $format=''){        if($date=='0000-00-00' || $date=='0000-00-00 00:00:00' || is_null($date))            return '';		        if(is_string($date))        {            $date = new DateTime($date);            if(!empty($format)){                return $date->format($format);            }            return $date->format(Yii::app()->params['dateFormat']);        }    }        /**     * @Author: ANH DUNG Apr 17, 2014     * @Todo: format date 20-05-2013 to 2013-05-20	     * @param: date format: 20-05-2013     * @Return: date format: 2013-05-20	     */        public static function dateConverDmyToYmdForSeach($date){        if(empty($date)) return '';        $dateTmp = explode('-', $date);        if(count($dateTmp)>2)            return $dateTmp[2].'-'.$dateTmp[1].'-'.$dateTmp[0];        return $date;    }        /**     * @Author: ANH DUNG Mar 11, 2014     * @Todo: format number with comma     */    public static function formatNumberWithComma($value) {        return number_format($value, 2);    }   // đồng bộ hiển thị kiểu số ở input khi edit, không để dấu , thập phân   public static function formatNumberInput($value)   {       $number_left = substr(strrchr($value, "."), 1);       if($number_left>0)           return $value;       return round($value);   }              /**     * @Author: ANH DUNG Mar 12, 2014     * @Todo: format name of user at Fe     * @return: string name     */    public static function getNameUserLogin() {        $str='';        if(isset(Yii::app()->user->id)){            $str.= Yii::app()->user->first_name." ".Yii::app()->user->last_name;        }else{            $str='Guest';        }        return $str;    }        /* Nguyen Dung Jun 30, 2014    *  check valid date     * @param: $stringcheck: 2013-05-26     * @return: true if valid date, else false    */    public static function isValidDate($someString){        $someString = trim($someString);        if(empty($someString)) return ;        $date = date_parse($someString);        if (checkdate($date["month"], $date["day"], $date["year"])){            return true;        }        return false;    }            /**     * @Author: ANH DUNG Mar 12, 2014     * @Todo: get array order number     * @return: array number     */        public static function getOrderArray($max=50){        $res = array();        for($i=1;$i<=$max;$i++){            $res[$i]=$i;        }        return $res;    }        /**     * @Author: ANH DUNG Mar 12, 2014     * @Todo: set cookie     */        public static function setCookieCart($cart){        $cookie = new CHttpCookie('cart', serialize($cart));        $cookie->expire = time() + 60 * 60 * 24;        Yii::app()->request->cookies['cart'] = $cookie;    }        /**     * @Author: ANH DUNG Mar 13, 2014     * @Todo: get name of member     */        public static function getNameMember($mUser){		$user = Users::model()->findByPk($mUser->id);        return $user->name;    }        /**     * @Author: ANH DUNG Mar 13, 2014     * @Todo: removeScriptTag     */        public static function removeScriptTag($string) {        $CHtmlPurifier = new CHtmlPurifier();        $CHtmlPurifier->options = array('HTML.ForbiddenElements' => array('script','style','applet'));        $string =  $CHtmlPurifier->purify($string);        $scriptRemove = array("<script>", "</script>", "script",'text/javascript');        return str_replace($scriptRemove, "", $string);        }            /**    * @Author: ANH DUNG Apr 11, 2014    @param: date format: 20-05-2013    @return: date format: 2013-05-20	    */    public static function dateDmyToYmdForAllIndexSearch($date){        if(empty($date)) return '';        $date = explode('-', $date);		        if(count($date)>2)            return $date[2].'-'.$date[1].'-'.$date[0];        return '';    }            /**    * Returns auto generate max id: ID0001.    * @param:$className: Users    * @param:$prefix_code: ID    * @param:$fieldName: name of field generate max id in database: ex: customer_id, user_no....    * @param:$length_max_id: int: 10 default    * @how to do: $model->user_no = MyFunctionCustom::getNextId('Users','ID','user_no', 10);    */  		    public static function getNextId($className, $prefix_code, $fieldName, $length_max_id = 10 ){        $prefix_code_length = strlen($prefix_code);        $criteria = new CDbCriteria;        $criteria->select='MAX(CONVERT(SUBSTR(t.'.$fieldName.','.($prefix_code_length+1).'),SIGNED)) as MAX_ID';        $criteria->compare("t.$fieldName",$prefix_code,true);        $model_ = call_user_func(array($className, 'model'));        $model = $model_->find($criteria);        $max_id =  (null == $model->MAX_ID) ? 0 : $model->MAX_ID;        $max_id++;        $addition_zero_num 	= $length_max_id - strlen($max_id) - strlen($prefix_code);        $code = $prefix_code;        for($i=1;$i<=$addition_zero_num;$i++)            $code.='0';        $code.= $max_id;        return $code;    }                /** ANH DUNG  MAR 09, 2014    @param: $date: format: 09-03-2014 15:21    @return: date format: 2014-03-09 15:21	    */    public static function InvoiceDateToDbDate($date){        if(empty($date)) return '';        $temp = explode(' ', $date);		        if(count($temp)>1){            $date = MyFormat::dateConverDmyToYmd($temp[0]);            $date = $date." $temp[1]";        }        return $date;    }	            /** ANH DUNG  MAR 09, 2014    @param: $date: format: 2014-03-09 15:21	    @return: date format: 09-03-2014 15:21    */    public static function InvoiceDateDbDateToShowDate($date){        if(empty($date)) return '';        $date = new DateTime($date);        return $date->format(MyFormat::$dateInvoice);    }        /** ANH DUNG  MAY 23, 2014    @param: $date: format: 08-May-2014    @return: date format: 2014-05-08    */    public static function indexDateToDbDate($date){        if(empty($date)) return null;        $date = new DateTime($date);        return $date->format("Y-m-d");    }        /**     * @Author: ANH DUNG Apr 22, 2014     * @Todo: replaceNewLineTextArea     * @Return: string      */       public static function replaceNewLineTextArea($string){        $string = str_replace(MyFormat::$text_area_newline, '<br>', $string);        $string = str_replace('<br><br><br>', '<br>', $string);        $string = str_replace('<br><br>', '<br>', $string);        return $string;    }                     /**  ANH DUNG Apr 24, 2014    *  @to do: save file from internet    *  @param string $url: http://verzview.com/verzbutt/demo/upload/temp/3-1374742421.jpg    *  @param string $path: /upload/temp    *  @param string $fileName: 3-1374742421.jpg    */    public static function DownloadFile($url, $path, $fileName ) {        MyFormat::DownloadFileUsingCurl($url, $path, $fileName);// ANH Dung fix Sep 08, 2014 do server cấm         // fopen() [<a href='function.fopen'>function.fopen</a>]: http:// wrapper is disabled in the server configuration by allow_url_fopen=0        return ;//        ROOT.$path: /home/verzview/public_html/verzbutt/demo/upload/temp         $newfname = ROOT.$path.'/'.$fileName;         $file = fopen ($url, "rb");         if ($file) {           $newf = fopen ($newfname, "wb");           if ($newf)           while(!feof($file)) {                fwrite($newf, fread($file, 1024 * 8 ), 1024 * 8 );           }         }         if ($file) {           fclose($file);         }         if ($newf) {           fclose($newf);//           return true;           return $json=array('success'=>true,'msg'=>'save file ok');         }else{//         return false;           return $json=array('success'=>false,'msg'=>'Can not save file '.$newfname);         }     }           /**  ANH DUNG Sep 08, 2014    *  @to do: save file from internet    *  @param string $url: http://verzview.com/verzbutt/demo/upload/temp/3-1374742421.jpg    *  @param string $path: /upload/temp    *  @param string $fileName: 3-1374742421.jpg    */    public static function DownloadFileUsingCurl($url, $path, $fileName ) {        $local_file_name = ROOT.$path.'/'.$fileName;        set_time_limit(0);//        $fp = fopen (dirname(__FILE__) . '/localfile.tmp', 'w+');//This is the file where we save the    information        $fp = fopen ($local_file_name, 'w+');//This is the file where we save the    information        $ch = curl_init(str_replace(" ","%20",$url));//Here is the file we are downloading, replace spaces with %20        curl_setopt($ch, CURLOPT_TIMEOUT, 50);        curl_setopt($ch, CURLOPT_FILE, $fp); // write curl response to file        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);        curl_exec($ch); // get curl response        curl_close($ch);        fclose($fp);    }         public static function validateUserAccess($roleIdAllow){        if(Yii::app()->user->role_id != $roleIdAllow)            Yii::app()->controller->redirect(Yii::app()->createAbsoluteUrl('/'));    }              /**     * NGUYEN DUNG - TO COMPARE TWO DATE     * @param: string $date1: 2013-10-25     * @param: string $date2: 2013-10-20     * @return: bool; true if date1>date2 else return flase      */    public static function compareTwoDate($date1, $date2){        $d1 = new DateTime($date1);        $d2 = new DateTime($date2);        if($d1>$d2) return true;        return false;    }                /**  ANH DUNG Apr 24, 2014    *  @to do: format number    */   public static function formatNumberLeft($price)   {        $number_left = substr(strrchr($price, "."), 1);        if($number_left>0){            $res = number_format((double)$price,2);        }else{            $res = number_format((double)$price,0);        }        return $res;   }        /**     * @Author: ANH DUNG Jun 27, 2014     * @Todo: format price number     */        public static function formatPrice($price){//        return Yii::app()->params['paypalCurrencySign']." ".number_format($value, 2);         // Jun 27, 2014 ANH DUNG tạm thời đóng dòng trên lại        $number_left = substr(strrchr($price, "."), 1);        if($number_left>0){            $res = number_format((double)$price,2);        }else{            $res = number_format((double)$price,0);        }        return $res;    }     /**     * @Author: ANH DUNG Jul 02, 2014     * @Todo: format price number     */       public static function formatPriceSign($price){//        return Yii::app()->params['paypalCurrencySign']." ".number_format($value, 2);         // Jun 27, 2014 ANH DUNG tạm thời đóng dòng trên lại        $number_left = substr(strrchr($price, "."), 1);        $sign = MyFormat::getSignCurrency();        if($number_left>0){            $res = number_format((double)$price,2);        }else{            $res = number_format((double)$price,0);        }        return $sign.' '.$res;    }        public static function getSignCurrency(){        return 'S$';    }         /**     * @Author: ANH DUNG Jul 02, 2014     * @Todo: format floor size number at search index     */       public static function formatFloorSize($floor_size){        $number_left = substr(strrchr($floor_size, "."), 1);        $unit_sqm_sqft = 1;        if(!empty(Yii::app()->params['unit_sqm_sqft']))            $unit_sqm_sqft = Yii::app()->params['unit_sqm_sqft'];                $sqm = round($floor_size/$unit_sqm_sqft);        $sign = 'sqft';        $sign_sqm = 'sqm';        if($number_left>0){            $res = number_format((double)$floor_size,2);        }else{            $res = number_format((double)$floor_size,0);        }        return $res.' '.$sign. "($sqm $sign_sqm)";    }        /**     * @Author: ANH DUNG Jul 08, 2014     * @Todo: load model loadModelByClass     * @Param: ($id, $ClassName)     * @Return: model     */    public static function loadModelByClass($id, $ClassName) {        try {            $model_ = call_user_func(array($ClassName, 'model'));            $model = $model_->findByPk($id);            if ($model === null) {                Yii::log("The requested page does not exist.");                throw new CHttpException(404, 'The requested page does not exist.');            }            return $model;        } catch (Exception $e) {            Yii::log("Exception " . print_r($e, true), 'error');            throw new CHttpException("Exception " . print_r($e, true));        }    }              /**     * @Author: ANH DUNG May 08, 2014     * @Todo: check allow access to controller and action     * @param string  $controllerName ex: rolesAuth     * @param string  $action : Listing, Index     * @return: true if allow, false if not allow     * MyFormat::isAllowAccess('Listing', 'Index');     */    public static function isAllowAccess($controllerName, $action){         $aActionAllowed = ActionsUsers::getActionArrayAllowForCurrentUserByControllerName($controllerName);         $aActionAllowed = array_map('strtolower',$aActionAllowed);                  return in_array(strtolower($action), $aActionAllowed);                      }    	        /**     * @Author: ANH DUNG Jul 25, 2014     * @Todo: check some action need ussr login     */    public static function CheckRequiredLogin(){        if(!isset(Yii::app()->user->id)){            throw new CHttpException(404, 'The requested page does not exist.');        }            }        // ANH DUNG    public static function GetNameUserAdminLogin($uid){        $model = Users::model()->findByPk($uid);        $cmsFormater = new CmsFormatter();        return $cmsFormater->formatNameForAll($model);    }        /**     * @Author: ANH DUNG Mar 12, 2014     * @Todo: remove some user input sql injection     * @Param: $string string input     * @Param: $needMore  $needMore['RemoveScript'] if(isset($needMore['RemoveScript'])){     * @Return: string     */	    public static function removeBadCharacters($string, $needMore=array()){                 $string = str_replace( MyFormat::$BAD_CHAR, '', $string);         if(isset($needMore['RemoveScript'])){             $string = MyFormat::removeScriptTag($string);         }         return trim($string);//         return str_replace(array('&','<','>','/','\\','"',"'",'?','+'), '', $string);    }          /**     * @Author: ANH DUNG Aug 05, 2014     * @Todo: DropDown for pageSize in CGridView     * @Param: $name='pageSize', $selected='', $needMore=array()){     * @Return: string     */	    public static function GetDropDownPageSize($name='pageSize', $selected='', $needMore=array()){                $aValue = array(5=>5,20=>20,50=>50,100=>100);        if(isset($needMore['empty']))            $aValue = array(0=>'Select',5=>5,20=>20,50=>50,100=>100);        return CHtml::dropDownList(            'pageSize',            $selected,            $aValue,            array('class'=>'change-pageSize w-50'));    }        /**     * @Author: ANH DUNG Aug 06, 2014     * @Todo: remove some field need remove script     * @Param: $model model      * @Param: $aAttributes array  attributes     * @Return: full name with salution of user     */    public static function RemoveScriptOfModelField(&$model, $aAttributes){        foreach($aAttributes as $FieldName){            $model->$FieldName = MyFormat::removeScriptTag($model->$FieldName);        }    }        /**     * @Author: ANH DUNG Aug 28, 2014     * @Todo: Add Ordinal Suffix PHP Function     * @Param: http://www.if-not-true-then-false.com/2010/php-1st-2nd-3rd-4th-5th-6th-php-add-ordinal-number-suffix/     */    public static function addOrdinalNumberSuffix($num) {        if (!in_array(($num % 100),array(11,12,13))){          switch ($num % 10) {            // Handle 1st, 2nd, 3rd            case 1:  return $num.'st';            case 2:  return $num.'nd';            case 3:  return $num.'rd';          }        }        return $num.'th';    }                /**     * @Author: ANH DUNG Sep 12, 2014     * @Todo: DropDown for year     */	        public static function getRangeYear($start_year=2014, $end_year=2051){        $data = array();        for($i=$start_year;$i<$end_year;$i++)                 $data[$i]=$i;        return $data;    }        /**     * @Author: ANH DUNG Sep 12, 2014     * @Todo: lấy mảng ngày từ 2 ngày đưa ra     * @Param: $date_from format: Y-m-d     * @Param: $date_to format: Y-m-d     * @Return: array date array('2014-06-07','2014-06-08'....)     */    public static function getArrayDay($date_from, $date_to){        if($date_from==$date_to)            return array($date_from);        $aRes = array();        $date_from_obj = new DateTime($date_from);        $date_to_obj = new DateTime($date_to);                // Nếu ngày bắt đầu lớn hơn ngày kết thúc -=> sai        if($date_from_obj>$date_to_obj)             return array($date_from);        $aRes[] = $date_from;        $ok=true;        while ($ok){            $temp = MyFormat::modifyDays($date_from, 1);            $aRes[] = $temp;            if($temp==$date_to)                $ok=FALSE;            $date_from = $temp;        }        return $aRes;                }        /** Nguyen Dung Sep 12, 2014 fix tên hàm cho dễ hiểu     *  cộng hoặc trừ thêm ngày      *  @param: $date: 2013-05-26     *  @param: $day_add: 16     *  @param: $operator: + or - default is +     *  @param: $amount_of_days: day, month, year default is "day"     *  @param: $format: default "Y-m-d"     *  @return: $format: default "Y-m-d"     */    public static function modifyDays($date, $day_add, $operator='+', $amount_of_days='day', $format='Y-m-d'){        MyFormat::isValidDate($date);        $date2 = new DateTime($date);        if($day_add==0)            $day_add=1;        $date2->modify($operator.$day_add.' '.$amount_of_days);        return $date2->format($format);            }            /**     * @Author: ANH DUNG Dec 02, 2014     * @Todo: check user access valid request     * @Param: $model     */    public static function CheckValidRequest($mTransaction) {        try {            $cUid = Yii::app()->user->id;            $aUidValid = ProTransactionsVendorPurchaserDetail::GetListUidByTransaction($mTransaction->id);            $aUidValid[$mTransaction->user_id] = $mTransaction->user_id ;            if( !in_array($cUid, $aUidValid)                     ){//                    || in_array($mTransaction->status, ProTransactions::$LIST_STATUS_NOT_ALLOW_ACCESS) ){                throw new Exception('Invalid request');            }                    } catch (Exception $exc) {            throw new CHttpException('404', $exc->getMessage());        }    }    /** ANH DUNG Jan 16, 2015    *  @to do: copy a file from one directory to another using PHP?    *  @param string $path_from: /var/www/html/verz/eogchange/upload/image.jpg    *  @param string $path_to: /var/www/html/verz/eogchange/upload/image1.jpg    */    public static function CopyFile($path_from, $path_to) {        copy($path_from, $path_to);    }        /**     * @Author: ANH DUNG Feb 11, 2015     * @Todo: bind notify message     */    public static function BindNotifyMessage() {        $res = '';        if(Yii::app()->user->hasFlash('success')):            $res .="<div class='ad-success'>".Yii::app()->user->getFlash('success');            $res .="</div>";        endif;        return $res;    }            /**     * @Author: ANH DUNG Mar 05, 2015     * @Todo: anh dung move tu ajax controller qua     * @Param: $url ='http://www.streetdirectory.com/api/?mode=search&&output=json&profile=sd_auto&country=sg&q=428802';     */    public static function curl_get_contents($url) {        // Initiate the curl session        $ch = curl_init();        // Set the URL        curl_setopt($ch, CURLOPT_URL, $url);        // Removes the headers from the output        curl_setopt($ch, CURLOPT_HEADER, 0);        // Return the output instead of displaying it directly        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        // Execute the curl session        $output = curl_exec($ch);        // Close the curl session        curl_close($ch);        // Return the output as a variable        return $output;    }        /**     * @Author: ANH DUNG Mar 05, 2015 From Austin code     */    public static function escapeValues($value) {        $value = str_replace("\\", "", $value);        $value = str_replace("'", "''", $value);        //$value = mysql_escape_string($value);        return $value;    }        /**     * @Author: ANH DUNG Mar 10, 2015     * @Todo: get list option     * @Param: $model model      */    public static function getListOption($aId, $ClassName) {        if(!is_array($aId))            return array();        $criteria = new CDbCriteria();        $criteria->addInCondition('t.id', $aId);        $model_ = call_user_func(array($ClassName, 'model'));        $model = $model_->findAll($criteria);        return CHtml::listData($model, 'id','name');    }        /**     * @Author: ANH DUNG Aug 17, 2015     * @Todo: build name of listing     * @Param: $mTrans model transaction     * @Param: $title array title name     */    public static function AdFixNameListing($mTrans, &$title) {        $res = '';        if($mTrans->listing){            if($mTrans->listing->building_name !=''){                $title []= $mTrans->listing->building_name;            }            if($mTrans->listing->house_blk_no !=''){                $title []= $mTrans->listing->house_blk_no;            }            if($mTrans->listing->property_street_name !=''){                $title []= $mTrans->listing->property_street_name;            }              if($mTrans->listing->postal_code !=''){                $title []= $mTrans->listing->postal_code;            }        }else{            // Nguyên phần else: ANH DUNG MAY 06, 2015            CmsFormatter::UpdateStringPropertyName($mTrans, $title);                        }        if(count($title)>0){ // maybe not need count            if(trim($title[0]) == ""){                unset($title[0]);            }           $res = implode(' - ',$title);         }        return $res;    }    }
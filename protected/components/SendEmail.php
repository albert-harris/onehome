<?phpclass SendEmail {    public static function sendMailBankRequestToAdmin($model) {         $aBody = array(            '{NAME}' => $model->fullname,            '{EMAIL}' => $model->email,            '{PHONE}' => $model->contact_no,             '{PROPERTY_NAME}' => $model->property_name_or_address,             '{POSTAL_CODE}' => $model->postal_code,             '{NRIC}' => $model->nric,         );           $aSubject = array(            '{NAME}' => $model->fullname,            '{EMAIL}' => $model->email,            );          CmsEmail::sendmail(MAIL_BANK_REQUEST, $aSubject, $aBody, Yii::app()->params['adminEmail']);        // send to ROLE_SUB_ADMIN        $dataAdmin = CHtml::listData(Users::model()->findAllByAttributes(array('role_id'=>ROLE_SUB_ADMIN,'application_id'=>BE)),'email', 'email');       if(count($dataAdmin)>0){           foreach ($dataAdmin as $mail)               CmsEmail::sendmail(MAIL_BANK_REQUEST, $aSubject, $aBody, $mail);       }    }    //bb    public static function forgotPassword($mUser, $sPassword, $role) {//2        switch ($role) {            case ROLE_REGISTER_MEMBER://                $iEmailTemplateID = 2;                $email = $mUser->email;                $link = Yii::app()->createAbsoluteUrl('site/login');                break;            case ROLE_AGENT://                $iEmailTemplateID = 2;                $email = $mUser->email_not_login;                $link = Yii::app()->createAbsoluteUrl('site/agentlogin');                break;            case ROLE_TENANT://                $iEmailTemplateID = 2;                $email = $mUser->email_not_login;                $link = Yii::app()->createAbsoluteUrl('site/tenantlogin');                break;            case ROLE_LANDLORD://                $iEmailTemplateID = 2;                $email = $mUser->email_not_login;                $link = Yii::app()->createAbsoluteUrl('site/landlordlogin');                break;        }        $iEmailTemplateID = 2;        $sTo = $email;        $aSubject = array('{NAME}' => $mUser->first_name . ' ' . $mUser->last_name,            '{EMAIL}' => $email,            '{PASSWORD}' => $sPassword,            '{LINK_LOGIN}' => '<a target="_blank" href="' . $link . '">here</a>'        );        $aBody = $aSubject;        CmsEmail::sendmail($iEmailTemplateID, $aSubject, $aBody, $sTo);    }    //bb    public static function registrationWithBankTransferUncompleteToUser($mUser) {//spec not required    }    //bb    public static function registrationWithPaypalUncompletedToUser($mUser) {//spec not required    }    //bb    public static function registrationSuccessAndBecomeMemberToUser($mUser) {        $param = array('FULL_NAME' => $mUser->first_name . ' ' . $mUser->last_name,            'PAYMENT_TYPE' => $mUser->payment_type,            'EMAIL' => $mUser->email,            'PASSWORD' => $mUser->temp_password,        );        EmailHelper::bindEmailContent(EMAIL_JOIN_MEMBER_SUCCESS, $param, $mUser->email);    }    //bb    public static function registrationSuccessAndBecomeMemberToAdmin($mUser) {//spec not required    }    //bb    public static function affiliateSubmissionFormSuccess($model, $discountCode) {        $param = array('NAME' => $model->name,            'AFFILIATE_CODE' => $model->affiliate_code,            'EMAIL' => $model->email,            'CONTACT' => $model->contact,            'ADDRESS' => $model->address,            'AFFILIATE_PROGRAM_NAME' => $model->affiliate->name,            'AFFILIATE_DISCOUNT' => $model->affiliate->getTextDiscount(),            'DISCOUNT_CODE' => $discountCode,        );        EmailHelper::bindEmailContent(EMAIL_AFFILIATE_SUBMISSION_FORM_SUCCESS, $param, $model->email);    }    public static function buyCoinSuccess($user, $orderPackage) {        $param = array(            'USERNAME' => $user->first_name . ' ' . $user->last_name,            'PACKAGE_NAME' => $orderPackage->package_name,            'COINS' => $orderPackage->total_coins,            'PRICE' => Yii::app()->format->formatPrice($orderPackage->price)        );        EmailHelper::bindEmailContent(EMAIL_BUY_COIN_SUCCESS, $param, $user->email);    }    /**     * @Author: MIKE DU 11-11-2013     * @Todo: send mail for confirm register     * @Param:  model register     * @Return:      */    public static function sendMailConfirmRegister($model) {        $key = Users::generateKey($model);        $link_confirm = '<a href="' . Yii::app()->createAbsoluteUrl('/site/confirm_register', array('uid' => $model->verify_code, 'key' => $key)) . '">' . Yii::app()->createAbsoluteUrl('/site/confirm_register', array('uid' => $model->verify_code, 'key' => $key)) . '</a>';        $aBody = array(            '{USERNAME}' => $model->username,            '{EMAIL}' => $model->email,            '{PASSWORD}' => $model->temp_password,            '{LINK_CONFIRM}' => $link_confirm,        );        if (CmsEmail::sendmail(EMAIL_CONFIRM_REGISTER, array(), $aBody, $model->email)) {            return true;        } else            $model->addError('email', 'Cannot send email');    }    public static function sendToAdmin($model) {    }    //MIKE - send mail register archiever programme enrolment    public static function sendMailRegisterProgramme($model) {        $param = array(            '{SURNAME}' => $model->surname,            '{GIVEN_NAME}' => $model->given_name,            '{OTHER_NAME}' => $model->other_name,            '{MOBILE_NUMBER}' => $model->mobile_number,            '{EMAIL_ADDRESS}' => $model->email_address,            '{STREET}' => $model->street,            '{HOUSE_NUMBER}' => $model->house_number,            '{CITY}' => $model->city,            '{COUNTRY}' => $model->country,            '{POSTAL_CODE}' => $model->postal_code,            '{SURNAME_STUDENT}' => $model->surname_student,            '{GIVEN_NAME_STUDENT}' => $model->given_name_student,            '{OTHER_NAME_STUDENT}' => $model->other_name_student,            '{SCHOOL_LEVEL}' => $model->school_level,            '{PROGRAMME_TITLE}' => $model->programme_title,            '{PROGRAME_FEE}' => $model->programme_fee,            '{GST}' => $model->GST,            '{TOTAL_PROGRAMME_FEE}' => $model->total_programme_fee,            '{PAYMENT_MODE}' => $model->payment_mode,        );        EmailHelper::bindEmailContent(EMAIL_REGISTER_PROGRAMME, $param, Yii::app()->params['adminEmail']);    }    public static function sendmailpayment($model, $list_product) {        $billing_address = json_decode($model->billing_address, true);        $shipping_address = json_decode($model->shipping_address, true);        $param = array(            '{NAME}' => $model->user->name,            '{ORDER_NO}' => $model->order_no,            '{CREATED_DATE}' => date('Y-m-d H:i:s', strtotime($model->created_date)),            '{BILLING_NAME}' => $billing_address['first_name'] . ' ' . $billing_address['last_name'],            '{BILLING_EMAIL}' => $billing_address['email'],            '{BILLING_NUMBER}' => $billing_address['contact_number'],            '{BILLING_ADDRESS}' => $billing_address['address'],            '{BILLING_COUNTRY}' => AreaCode::model()->findByPk($billing_address['country_id'])->area_name,            '{BILLING_POSTCODE}' => $billing_address['postal_code'],            '{SHIPPING_NAME}' => $shipping_address['first_name'] . ' ' . $shipping_address['last_name'],            '{SHIPPING_EMAIL}' => $shipping_address['email'],            '{SHIPPING_NUMBER}' => $shipping_address['contact_number'],            '{SHIPPING_ADDRESS}' => $shipping_address['address'],            '{SHIPPING_COUNTRY}' => AreaCode::model()->findByPk($shipping_address['country_id'])->area_name,            '{SHIPPING_POSTCODE}' => $shipping_address['postal_code'],            '{PRODUCT_LIST}' => $list_product,        );        EmailHelper::bindEmailContent(EMAIL_CONFIRM_PAYMENT_PRODUCT, $param, $model->user->email);    }    public static function sendMailContact($model, $email_to) {        $param = array('{ENQUIRY_TYPE}' => $model->enquiry_type,            '{NAME}' => $model->name,            '{POSITION}' => $model->position,            '{COMPANY}' => $model->company,            '{PHONE}' => $model->phone,            '{EMAIL}' => $model->email,            '{MESSAGE}' => nl2br($model->message),        );        EmailHelper::bindEmailContent(EMAIL_CONTACT_US, $param, $email_to);//        EmailHelper::bindEmailContent(EMAIL_CONTACT_US_GUESS, $param, $model->email);    }    //Kvan    //Reply Enquiry Email For Agent    public static function sendEmailReplyEnquiryAgent($model) {        $enquiry = ProEnquiryProperty::getItemById($model->enquiry_property_id);        //var_dump($model->email_to); echo $model->message; echo $enquiry->listing->user_id; echo die;        $email_to = $model->email_to;        $aBody = array(            '{MESSAGE}' => nl2br($model->message),        );        $aSubject = array(            '{MESSAGE}' =>nl2br($model->message),        );        $sSubject = $model->subject;        CmsEmail::sendmail(EMAIL_REPLY_ENQUIRY, $aSubject, $aBody, $email_to, $enquiry->listing->user->email_not_login, $sSubject);    }    public static function sendEmailShortList($model) {        $Listing = Listing::model()->findByPk($model->property_id);        $email_to = $model->email;        $aBody = array(            '{MESSAGE}' => nl2br($model->description) ,            '{PROPERTY_NAME}' => $Listing->property_name_or_address,            '{EMAIL}' => isset(Yii::app()->user->email) ? Yii::app()->user->email : '',            '{NAME}' => $model->name,            '{PHONE}' => $model->phone,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),        );        $aSubject = array(            '{MESSAGE}' => nl2br($model->description) ,            '{PROPERTY_NAME}' => $Listing->property_name_or_address,            '{NAME}' => $model->name,            '{EMAIL}' => isset(Yii::app()->user->email) ? Yii::app()->user->email : '',            '{PHONE}' => $model->phone,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),        );        $email_to = $Listing->user->email_not_login;        $from = $model->email;//      CmsEmail::sendmail(EMAIL_SHORTLIST_ENQUIRY, $aSubject, $aBody, $email_to, $Listing->user->email_not_login, $sSubject);        CmsEmail::sendmail(EMAIL_SHORTLIST_ENQUIRY, $aSubject, $aBody, $email_to,$from);    }    public static function sendEmailEnquiryForAgent($model) {        $Listing = Listing::model()->findByPk($model->property_id);        $email_to = $model->email;        $aBody = array(            '{AGENT_NAME}'=>$model->listing->user->name_for_slug,            '{NAME}' => $model->name,            '{PROPERTY_NAME}' => CmsFormatter::getListingNameDetail($Listing).' - S$ '.Yii::app()->format->formatPrice($Listing->price),            '{PROPERTY_LINK}' => Yii::app()->createAbsoluteUrl('site/listingdetail', array('slug' => $Listing->slug)),            '{PHONE}' => $model->phone,            '{EMAIL}'=>$model->email,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),            '{MESSAGE}' => nl2br(strip_tags($model->description)),            '{LOGIN_LINK}' => Yii::app()->createAbsoluteUrl('site/agentlogin'),        );        $aSubject = array(            '{EMAIL}'=>$model->email,            '{MESSAGE}' => nl2br(strip_tags($model->description)),            '{PROPERTY_NAME}' => $Listing->property_name_or_address,            '{NAME}' => $model->name,            '{PHONE}' => $model->phone,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),        );        CmsEmail::sendmail(EMAIL_ENQUIRY_FOR_AGENT, $aSubject, $aBody,$Listing->user->email_not_login, $email_to);    }    //add 14-08-2015    //By HTram    public static function sendEmailEnquiryForSender($model) {        $Listing = Listing::model()->findByPk($model->property_id);        $email_to = $model->email;        $aBody = array(            '{EMAIL}'=>$model->email,            '{MESSAGE}' => nl2br(strip_tags($model->description)),            '{PROPERTY_NAME}' => $Listing->property_name_or_address,            '{NAME}' => $model->name,            '{PHONE}' => $model->phone,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),        );        $aSubject = array(             '{EMAIL}'=>$model->email,            '{MESSAGE}' => nl2br(strip_tags($model->description)),            '{PROPERTY_NAME}' => $Listing->property_name_or_address,            '{NAME}' => $model->name,            '{PHONE}' => $model->phone,            '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),        );        CmsEmail::sendmail(EMAIL_ENQUIRY_FOR_SENDER, $aSubject, $aBody,$email_to);    }    /**     * @Author: ANH DUNG Apr 25, 2014     * @Todo: send mail to landlord and tenant with info login when create new at create transaction     * @Param: $mUser model user     */    public static function LandlordTenant($mUser, $needMore = array()) {        if( trim($mUser->email_not_login) == "" ) { return ; }        $cmsFormater = new CmsFormatter();        $url = Yii::app()->createAbsoluteUrl('site/tenantlogin');        if ($mUser->role_id == ROLE_LANDLORD)            $url = Yii::app()->createAbsoluteUrl('site/landlordlogin');        $link = '<a target="_blank" href="' . $url . '">' . $url . '</a>';        $aBody = array(            '{FULL_NAME}' => $cmsFormater->formatFullNameRegisteredUsers($mUser),            '{EMAIL}' => $mUser->email_not_login,            '{NRIC}' => $mUser->nric_passportno_roc,            '{PASSWORD}' => $mUser->temp_password,            '{LINK_LOGIN}' => $link,        );        $aSubject = array(            '{FULL_NAME}' => $cmsFormater->formatFullNameRegisteredUsers($mUser),        );        CmsEmail::sendmail(MAIL_LANDLORD_TENANT_LOGIN, $aSubject, $aBody, $mUser->email_not_login);    }    /**     * @Author: ANH DUNG Apr 25, 2014     * @Todo: send mail to landlord and tenant, just notify      * @Param: $mUser model user     * @Param: $mTransactions     */    public static function LandlordTenantOld($mUser, $mTransactions, $needMore = array()) {        $cmsFormater = new CmsFormatter();        $url = MyFunctionCustom::getUrlListing($mTransactions->listing_id);//        echo '<pre>';//        print_r($url);//        echo '</pre>';//        die;        $link = '<a target="_blank" href="' . $url . '">View Listing</a>';        $aBody = array(            '{FULL_NAME}' => $cmsFormater->formatFullNameRegisteredUsers($mUser),            '{EMAIL}' => $mUser->email_not_login,            '{NRIC}' => $mUser->nric_passportno_roc,            '{LINK_VIEW_LISTING}' => $link,        );        $aSubject = array(            '{FULL_NAME}' => $cmsFormater->formatFullNameRegisteredUsers($mUser),        );        CmsEmail::sendmail(MAIL_LANDLORD_TENANT_ADDTO_TRANSACTION, $aSubject, $aBody, $mUser->email_not_login);    }    /*     * ---------------------------------------------     * Author : dtoan     * Email  : ghostkissboy12@gmail.com     * Send email for admin     * --------------------------------------------- */     public static function sendMailEnquiryGlobalToAdmin($model) {         $aBody = array(			'{NAME}' => $model->name,			'{EMAIL}' => $model->email,			'{PHONE}' => $model->phone, 			'{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),			'{REMARK}' => $model->remark,			'{ENQUIRY}' => Yii::app()->controller->renderPartial(				'application.modules.admin.views.globalEnquiry._enquiry', 				array('model'=>$model), true),        );           $aSubject = array(			'{NAME}' => $model->name,			'{EMAIL}' => $model->email,            );		CmsEmail::sendmail(EMAIL_ENQUIRY_GLOBAL, $aSubject, $aBody, Yii::app()->params['adminEmail']);    }    /*     * ---------------------------------------------     * Author : dtoan     * Email  : ghostkissboy12@gmail.com     * Send email to sub admin     * --------------------------------------------- */     public static function sendMailEnquiryGlobalToSubAdmin($model) {         $aBody = array(            '{NAME}' => $model->name,            '{EMAIL}' => $model->email,            '{PHONE}' => $model->phone,             '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),            '{MESSAGE}' => nl2br(MyFormat::replaceNewLineTextArea($model->description))        );           $aSubject = array(            '{NAME}' => $model->name,            '{EMAIL}' => $model->email,            );         $dataAdmin = CHtml::listData(Users::model()->findAllByAttributes(array('role_id'=>ROLE_SUB_ADMIN,'application_id'=>BE)),'email', 'email');       if(count($dataAdmin)>0){           foreach ($dataAdmin as $mail)               CmsEmail::sendmail(EMAIL_ENQUIRY_GLOBAL, $aSubject, $aBody, $mail);       }    }    /**     * @Author: ANH DUNG Jan 23, 2015     * @Todo: when Enquiry sent here’s no confirmation reply to the sender’s e-mail.     * @param $model model ENQUIRY_     */    public static function sendMailEnquiryGlobalToSender($model) {         $aBody = array(            '{NAME}' => $model->name,            '{EMAIL}' => $model->email,            '{PHONE}' => $model->phone,             '{COUNTRY}' => ActiveRecord::getInfoRecord('AreaCode', $model->country_id, 'area_name'),            '{MESSAGE}' => nl2br(strip_tags($model->remark)),        );           $aSubject = array(            '{NAME}' => $model->name,            '{EMAIL}' => $model->email,        );                 CmsEmail::sendmail(EMAIL_ENQUIRY_GLOBAL_TO_SENDER, $aSubject, $aBody, $model->email);    }    /**     * @Author: ANH DUNG Dec 08, 2014     * @Todo: get list id of LL,Tenant, Agent for each transaction     * belong to CronSendMailTenancyExpiring     * @Param: $mTransaction     */    public static function MailToLandlordTenant($mTransaction) {        $aType = array(ProTransactions::CLIENT_TYPE_TENANT, ProTransactions::CLIENT_TYPE_LANLORD);        $aModelLandlordTenant = ProTransactionsVendorPurchaserDetail::GetListModelByTypeUser($mTransaction->id, $aType);        $PropertyName = $mTransaction->rPropertyDetail?$mTransaction->rPropertyDetail->property_name_or_address:"";        $ExpiringDate = MyFormat::dateConverYmdToDmy($mTransaction->expiring_date, 'd/m/Y');        foreach($aModelLandlordTenant as $item){            $link = Yii::app()->createAbsoluteUrl('member/landlord/tenancies_detail', array( 'transaction_id'=> $mTransaction->id ));            if($item->type ==  ProTransactions::CLIENT_TYPE_TENANT){                $link = Yii::app()->createAbsoluteUrl('member/tenant/tenancies_detail', array( 'transaction_id'=> $mTransaction->id ));            }            $href = "<a href='$link' target='_blank'>Tenancy link</a>";            $FullName = $item->name;            $aBody = array(                '{FULL_NAME}' => $FullName,                '{PROPERTY_NAME}' => $PropertyName,                '{EXPIRING_DATE}' => $ExpiringDate,                '{TENANCY_LINK}' => $href,            );               $aSubject = array(                '{PROPERTY_NAME}' => $PropertyName,                            );            CmsEmail::sendmail(MAIL_TENANCY_EXPIRING, $aSubject, $aBody, $item->email);        }    }    // belong to CronSendMailTenancyExpiring    public static function MailToAgentAdmin($mTransaction) {        /* 1. model Agent                  */        $link = Yii::app()->createAbsoluteUrl('member/agent/tenancies_detail', array( 'transaction_id'=> $mTransaction->id ));        $mAgent = Users::model()->findByPk( $mTransaction->user_id );        $PropertyName = $mTransaction->rPropertyDetail?$mTransaction->rPropertyDetail->property_name_or_address:"";        $ExpiringDate = MyFormat::dateConverYmdToDmy($mTransaction->expiring_date, 'd/m/Y');        $cmsFormater = new CmsFormatter();        $FullName = $cmsFormater->formatFullNameRegisteredUsers($mAgent);        $aBody = array(            '{FULL_NAME}' => $FullName,            '{PROPERTY_NAME}' => $PropertyName,            '{EXPIRING_DATE}' => $ExpiringDate,            '{TENANCY_LINK}' => $link,        );           $aSubject = array(            '{PROPERTY_NAME}' => $PropertyName,                        );        $href = "<a href='$link' target='_blank'>Tenancy link</a>";        // mail to agent        CmsEmail::sendmail(MAIL_TENANCY_EXPIRING, $aSubject, $aBody, $mAgent->email_not_login );        // mail to admin        $link = Yii::app()->createAbsoluteUrl('admin/transactions/tenancies');        $href = "<a href='$link' target='_blank'>Tenancy link</a>";        $FullName = 'Admin';        $AdminEmail = Yii::app()->setting->getItem('adminEmail');        $aBody = array(            '{FULL_NAME}' => $FullName,            '{PROPERTY_NAME}' => $PropertyName,            '{EXPIRING_DATE}' => $ExpiringDate,            '{TENANCY_LINK}' => $link,        );           $aSubject = array(            '{PROPERTY_NAME}' => $PropertyName,                        );        $AdminEmail = CmsEmail::sendmail(MAIL_TENANCY_EXPIRING, $aSubject, $aBody, $AdminEmail);    }	    /**     * @Author: ANH DUNG Jan 21, 2015     * @Todo: Put an alert for Tenant 1 month before employment pass expires.     * @Param: $mUser     */    public static function MailToTenantEmploymentPassExpire($mUser) {        $ExpiringDate = MyFormat::dateConverYmdToDmy($mUser->pass_expiry_date, 'd/m/Y');                $link = Yii::app()->createAbsoluteUrl('site/tenantlogin');        $href = "<a href='$link' target='_blank'>Tenant login</a>";        $FullName = $mUser->first_name;        $aBody = array(            '{FULL_NAME}' => $FullName,            '{EXPIRING_DATE}' => $ExpiringDate,            '{LINK_LOGIN_TENANT}' => $href,        );        $aSubject = array(            '{FULL_NAME}' => $FullName,        );                CmsEmail::sendmail(MAIL_TENANT_EMPLOYMENT_PASS_EXPIRE, $aSubject, $aBody, $mUser->email_not_login);    }	    /**     * @Author: ANH DUNG Jan 21, 2015     * @Todo: Put an alert for Tenant 1 month before employment pass expires.     * @Param: $mUser     */    public static function NotifyTestimonialSubmitToAdmin($mTestimonial) {        $mUser = Users::model()->findByPk(Yii::app()->user->id);        $FullName = $mUser->first_name;        $AdminEmail = Yii::app()->setting->getItem('adminEmail');        $aBody = array(            '{USER_FULL_NAME}' => $FullName,            '{USER_EMAIL}' => $mUser->email_not_login,            '{TESTIMONIAL_MESSAGE}' => $mTestimonial->description,            '{TESTIMONIAL_TYPE}' => ProTestimonial::$ARR_TYPE[$mTestimonial->type],            '{TESTIMONIAL_DISPLAY_NAME}' => $mTestimonial->name,        );        $aSubject = array(            '{USER_FULL_NAME}' => $FullName,        );                CmsEmail::sendmail(MAIL_NOTIFY_TESTIMONIAL_SUBMIT, $aSubject, $aBody, $AdminEmail );    }		/*	 * @author Lam Huynh	 */	static public function newTransaction($model) {		$f = Yii::app()->format;		$type_for_text = $model->type==Listing::FOR_RENT ? 'For Rent' : 'For Sale';		$p = $model->rPropertyDetail;		$aBody = array(			'{AGENT}' => $f->formatFullNameRegisteredUsers($model->user),			'{FOR}' => $type_for_text,			'{TRAN_NO}' => $model->transactions_no,			'{PNAME}' => $f->formatTransactionPropertyName($model),			'{PTYPE}' => $p->rPropertyType ? $p->rPropertyType->name : '',			'{BLK}' => $p->house_blk_no,			'{STREET}' => $p->street_name,			'{POSTAL_CODE}' => $p->postal_code,			'{BEDROOM}' => $p->no_of_bedroom,			'{TENURE}' => $p->rTenure ? $p->rTenure->name:'',			'{UNIT_NO}' => $p->unit_no,			'{BNAME}' => $p->building_name,			'{BIA}' => $p->built_in_area,			'{LAND_AREA}' => $p->land_area,        );        $aSubject = array(        );   		        CmsEmail::sendmail(EMAIL_NEW_TRANSACTION, $aSubject, $aBody, 'accounts@onehome.sg');	}		protected static function prepareServiceRegistrationParams(ServiceRegistrationForm $model) {		ob_start(); ?>			<p>Services:</p>			<?php foreach($model->getRegisteredServiceData() as $group): ?>				<p><strong><?= $group['model']->name ?></strong></p>				<ul>				<?php foreach($group['childs'] as $item): ?>					<li><?= $item->name ?></li>				<?php endforeach ?>				</ul>			<?php endforeach ?>		<?php		$services = ob_get_clean();		return array(			'{NAME}' => $model->fullname,			'{PTYPE}' => $model->propertyTypeText,			'{RTYPE}' => $model->roomTypeText,			'{RSIZE}' => $model->room_size . ' sqft',			'{EMAIL}' => $model->email,			'{CONTACT}' => $model->contact_no,			'{REMARK}' => $model->remark,			'{TIME}' => $model->preferedTimeText,			'{KNOWBY}' => $model->knowByText,			'{SERVICES}' => $services,			//'{LINK}' => Yii::app()->createAbsoluteUrl('admin/serviceRegistration/view', array('id'=>$model->id)),        );	}		/*	 * @author Lam Huynh	 */	static public function serviceRegistrationAdmin(ServiceRegistrationForm $model) {		$aBody = $aSubject = self::prepareServiceRegistrationParams($model);        CmsEmail::sendmail('service_registration_admin', $aSubject, $aBody, Yii::app()->params['adminEmail']);	}		/*	 * @author Lam Huynh	 */	static public function serviceRegistrationAdmin2(ServiceRegistrationForm $model) {		$aBody = $aSubject = self::prepareServiceRegistrationParams($model);        CmsEmail::sendmail('service_registration_admin', $aSubject, $aBody, 'accounts@onehome.sg');	}		/*	 * @author Lam Huynh	 */	static public function serviceRegistrationUser(ServiceRegistrationForm $model) {		$aBody = $aSubject = self::prepareServiceRegistrationParams($model);        CmsEmail::sendmail('service_registration_user', $aSubject, $aBody, $model->email);	}		/*	 * @author Lam Huynh	 */	static public function agentRegistrationToAdmin(Users $model) {		$aBody = $aSubject = array(			'{NAME}' => $model->name_for_slug,			'{SALUTATION}' => $model->title,			'{PHONE}' => $model->phone,			'{EMAIL}' => $model->email_not_login,			'{CEA}' => $model->agent_cea,			'{DISTRICT}' => $model->districtText,        );        CmsEmail::sendmail('agent_registration_admin', $aSubject, $aBody, 'sunwoei@onehome.sg');	}		/*	 * @author Lam Huynh	 */	static public function agentRegistrationToUser(Users $model) {		$aBody = $aSubject = array(			'{NAME}' => $model->name_for_slug,			'{SALUTATION}' => $model->title,			'{PHONE}' => $model->phone,			'{EMAIL}' => $model->email_not_login,			'{CEA}' => $model->agent_cea,			'{DISTRICT}' => $model->districtText,        );        CmsEmail::sendmail('agent_registration_user', $aSubject, $aBody, $model->email_not_login);	}		/*	 * @author Lam Huynh	 */	static public function companyListingAgreementToAdmin(CompanyListingAgreement $model) {		$aBody = $aSubject = array(			'{NAME}' => $model->user->name_for_slug,			'{CONTENT}'=> Yii::app()->controller->renderPartial(				'application.components.views.tc-form-widget.view', 				array('model'=>$model), true),        );        CmsEmail::sendmail('company_tc_form', $aSubject, $aBody, Yii::app()->params['adminEmail']);	}	}